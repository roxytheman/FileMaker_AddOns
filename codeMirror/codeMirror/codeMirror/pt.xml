
<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.00D101177BD78010C4B1DA1DBF594622</StringID>
	<SourceText>fontSize</SourceText>
	<TargetText>fontSize</TargetText>
	<Comment>com.fmi.calculation.text.fontSize</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.0101B12F2221CD26F078D9560A241626</StringID>
	<SourceText>target.layout</SourceText>
	<TargetText>target.layout</TargetText>
	<Comment>com.fmi.calculation.text.target.layout</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.01215CAEDB81DB0DB6D7D1D8E7697A33</StringID>
	<SourceText>splitVertical</SourceText>
	<TargetText>splitVertical</TargetText>
	<Comment>com.fmi.calculation.text.splitVertical</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.0442B3947E3269FC32DAAD3CCF2B91A1</StringID>
	<SourceText>wv_codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>wv_codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.calculation.text.wv_codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.05174D3C117ED89776226125BBD687C0</StringID>
	<SourceText>server</SourceText>
	<TargetText>server</TargetText>
	<Comment>com.fmi.calculation.text.server</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.06F769356070EA8A7A343A5E98525EA1</StringID>
	<SourceText>environment.target.mode</SourceText>
	<TargetText>environment.target.mode</TargetText>
	<Comment>com.fmi.calculation.text.environment.target.mode</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.0A2A6F666A2955B3C0D398EA50924A61</StringID>
	<SourceText>code</SourceText>
	<TargetText>code</TargetText>
	<Comment>com.fmi.calculation.text.code</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.0D32BB16AD332A5CB3C1232585E26417</StringID>
	<SourceText>target.name</SourceText>
	<TargetText>target.name</TargetText>
	<Comment>com.fmi.calculation.text.target.name</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.10C213F0A6C5D8A3CB417D132C3DA63C</StringID>
	<SourceText>Disable Automatic Execution of Function</SourceText>
	<TargetText>Disable Automatic Execution of Function</TargetText>
	<Comment>com.fmi.calculation.text.Disable Automatic Execution of Function</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.14278C793214B42993BE810426AD69E7</StringID>
	<SourceText>bbAutoExecuteToggle_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bbAutoExecuteToggle_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.calculation.text.bbAutoExecuteToggle_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.1459DC4702EE8306479D3A4E8EA0492E</StringID>
	<SourceText>{{number}}</SourceText>
	<TargetText>{{number}}</TargetText>
	<Comment>com.fmi.calculation.text.{{number}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.158BAFEB1C0527CCCD31D9F7EB1B7F06</StringID>
	<SourceText>{{keyword}}</SourceText>
	<TargetText>{{keyword}}</TargetText>
	<Comment>com.fmi.calculation.text.{{keyword}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.17E23DB51EC0FD7D55D08B295E33FACF</StringID>
	<SourceText>environment.autoExecute</SourceText>
	<TargetText>environment.autoExecute</TargetText>
	<Comment>com.fmi.calculation.text.environment.autoExecute</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.19CC3C85B730F89568233DB9AF4F03AA</StringID>
	<SourceText> Other Functions<CR/></SourceText>
	<TargetText> Other Functions<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Other Functions_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.1B759226EB6991D1214E639EA673D087</StringID>
	<SourceText>?</SourceText>
	<TargetText>?</TargetText>
	<Comment>com.fmi.calculation.text.?</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.1BA7AA69F227024A16700AD622C9CA5E</StringID>
	<SourceText>codeMirror.fontSize</SourceText>
	<TargetText>codeMirror.fontSize</TargetText>
	<Comment>com.fmi.calculation.text.codeMirror.fontSize</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.1D736C13F1CED6A61E73C80096CC730B</StringID>
	<SourceText>full</SourceText>
	<TargetText>full</TargetText>
	<Comment>com.fmi.calculation.text.full</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.208CE1993FEEE3F0A094B23BDB9814AC</StringID>
	<SourceText><CR/><CR/>// Payload example when using a field to store the code<CR/><CR/>JSONSetElement ( $$CODEMIRROR ; <CR/><CR/><TAB/>[ &quot;target.isVar&quot; ; False ; 5 ] ;<CR/><TAB/>[ &quot;target.name&quot; ; &quot;myTable::myField&quot; ; 1 ] ;<CR/><TAB/>[ &quot;target.webViewer&quot; ; &quot;vw_codeMirror_myEditor&quot; ; 1 ]<CR/><CR/>)<CR/><CR/></SourceText>
	<TargetText><CR/><CR/>// Payload example when using a field to store the code<CR/><CR/>JSONSetElement ( $$CODEMIRROR ; <CR/><CR/><TAB/>[ &quot;target.isVar&quot; ; False ; 5 ] ;<CR/><TAB/>[ &quot;target.name&quot; ; &quot;myTable::myField&quot; ; 1 ] ;<CR/><TAB/>[ &quot;target.webViewer&quot; ; &quot;vw_codeMirror_myEditor&quot; ; 1 ]<CR/><CR/>)<CR/><CR/></TargetText>
	<Comment>com.fmi.calculation.text._CR/__CR/_// Payload example when using a field to store the code_CR/__CR/_JSONSetElement ( $$CODEMIRROR ; _CR/__CR/__TAB/_[ &quot;target.isVar&quot; ; False ; 5 ] ;_CR/__TAB/_[ &quot;target.name&quot; ; &quot;myTable::myField&quot; ; 1 ] ;_CR/__TAB/_[ &quot;target.webViewer&quot; ; &quot;vw_codeMirror_myEditor&quot; ; 1 ]_CR/__CR/_)_CR/__CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.22A3488FB71035CCD6CBBA95E875DC74</StringID>
	<SourceText>code1</SourceText>
	<TargetText>code1</TargetText>
	<Comment>com.fmi.calculation.text.code1</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.23DD2370A45169D3EEA9617324052C91</StringID>
	<SourceText>target.code</SourceText>
	<TargetText>target.code</TargetText>
	<Comment>com.fmi.calculation.text.target.code</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.248A8DDE53EE335975D4D0E1B6E57565</StringID>
	<SourceText><CR/><CR/>// Payload example when using a field to store the code<CR/><CR/>JSONSetElement ( $$CODEMIRROR ; <CR/><CR/><TAB/>[ &quot;target.isVar&quot; ; False ; 5 ] ;<CR/><TAB/>[ &quot;target.name&quot; ; &quot;myTable::myField&quot; ; 1 ] <CR/><CR/>)<CR/><CR/></SourceText>
	<TargetText><CR/><CR/>// Payload example when using a field to store the code<CR/><CR/>JSONSetElement ( $$CODEMIRROR ; <CR/><CR/><TAB/>[ &quot;target.isVar&quot; ; False ; 5 ] ;<CR/><TAB/>[ &quot;target.name&quot; ; &quot;myTable::myField&quot; ; 1 ] <CR/><CR/>)<CR/><CR/></TargetText>
	<Comment>com.fmi.calculation.text._CR/__CR/_// Payload example when using a field to store the code_CR/__CR/_JSONSetElement ( $$CODEMIRROR ; _CR/__CR/__TAB/_[ &quot;target.isVar&quot; ; False ; 5 ] ;_CR/__TAB/_[ &quot;target.name&quot; ; &quot;myTable::myField&quot; ; 1 ] _CR/__CR/_)_CR/__CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.25613664C35F0EC43793BD16422556F8</StringID>
	<SourceText>codeMirror 5.65.2</SourceText>
	<TargetText>codeMirror 5.65.2</TargetText>
	<Comment>com.fmi.calculation.text.codeMirror 5.65.2</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.29A3FD63700E5950B01CBC0BD874E2D4</StringID>
	<SourceText>#F45B0E</SourceText>
	<TargetText>#F45B0E</TargetText>
	<Comment>com.fmi.calculation.text.#F45B0E</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.2F727489502C0FAEBBFD2F2699CBE230</StringID>
	<SourceText>target.recordNumber</SourceText>
	<TargetText>target.recordNumber</TargetText>
	<Comment>com.fmi.calculation.text.target.recordNumber</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.345DDE2F745FEBEA79BD5949A6294479</StringID>
	<SourceText>string</SourceText>
	<TargetText>string</TargetText>
	<Comment>com.fmi.calculation.text.string</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.364579A680AA6410F50C93CE380FB367</StringID>
	<SourceText>execute.recordNumber</SourceText>
	<TargetText>execute.recordNumber</TargetText>
	<Comment>com.fmi.calculation.text.execute.recordNumber</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.38E0CF313F3C5DE6131F8143C47B84A9</StringID>
	<SourceText>#A40019</SourceText>
	<TargetText>#A40019</TargetText>
	<Comment>com.fmi.calculation.text.#A40019</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.3E1262454B3375C414E1F6DB01DCAEAB</StringID>
	<SourceText>wv_codeMirror_</SourceText>
	<TargetText>wv_codeMirror_</TargetText>
	<Comment>com.fmi.calculation.text.wv_codeMirror_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.3F161235C116A32851FE3196078E50FE</StringID>
	<SourceText>; 0 )</SourceText>
	<TargetText>; 0 )</TargetText>
	<Comment>com.fmi.calculation.text.; 0 )</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.418823D1B53934F341FE181380FC77AB</StringID>
	<SourceText>target.mode</SourceText>
	<TargetText>target.mode</TargetText>
	<Comment>com.fmi.calculation.text.target.mode</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.41D1CFE12A272BE5D1A2BDC7ED39F553</StringID>
	<SourceText>execute.code</SourceText>
	<TargetText>execute.code</TargetText>
	<Comment>com.fmi.calculation.text.execute.code</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4383ABBFBF167C6541D5ED98930257FD</StringID>
	<SourceText> Editor Background Colour<CR/></SourceText>
	<TargetText> Editor Background Colour<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Editor Background Colour_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.457745B91D193207A95EF465E46C034F</StringID>
	<SourceText> Please disable and set your own initialiser payload <CR/></SourceText>
	<TargetText> Please disable and set your own initialiser payload <CR/></TargetText>
	<Comment>com.fmi.calculation.text. Please disable and set your own initialiser payload _CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.46E197D9086B9F85AD1379059C512C66</StringID>
	<SourceText>refresh.object[1]</SourceText>
	<TargetText>refresh.object[1]</TargetText>
	<Comment>com.fmi.calculation.text.refresh.object[1]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.482E3F900F2261A12FA90B866EB2FFFF</StringID>
	<SourceText>code2</SourceText>
	<TargetText>code2</TargetText>
	<Comment>com.fmi.calculation.text.code2</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.483DBC800B57B22E2975DC8E94E44EA8</StringID>
	<SourceText>applySettings</SourceText>
	<TargetText>applySettings</TargetText>
	<Comment>com.fmi.calculation.text.applySettings</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4B41D6D46CDCD043A098528EF5DBC6BE</StringID>
	<SourceText>wv_codeMirror</SourceText>
	<TargetText>wv_codeMirror</TargetText>
	<Comment>com.fmi.calculation.text.wv_codeMirror</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4CDEA926B718ADF33D0D5E40666A647C</StringID>
	<SourceText>target.isVar</SourceText>
	<TargetText>target.isVar</TargetText>
	<Comment>com.fmi.calculation.text.target.isVar</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4D6819D9EC1D5CBC1D8FFC30EF2215F2</StringID>
	<SourceText>Enable Automatic Execution of Function</SourceText>
	<TargetText>Enable Automatic Execution of Function</TargetText>
	<Comment>com.fmi.calculation.text.Enable Automatic Execution of Function</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4DE85C0E25479E569CC9E56B656437E1</StringID>
	<SourceText>fontName</SourceText>
	<TargetText>fontName</TargetText>
	<Comment>com.fmi.calculation.text.fontName</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4EEEBD76D93EE7125384D0C047C22089</StringID>
	<SourceText>refresh.object</SourceText>
	<TargetText>refresh.object</TargetText>
	<Comment>com.fmi.calculation.text.refresh.object</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.4F3588AC9A0B0E36A370446C5F253C8B</StringID>
	<SourceText>fontFamily</SourceText>
	<TargetText>fontFamily</TargetText>
	<Comment>com.fmi.calculation.text.fontFamily</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.531328EE0378E960B1BBBAB5CA5B0C6E</StringID>
	<SourceText>environment.target.code</SourceText>
	<TargetText>environment.target.code</TargetText>
	<Comment>com.fmi.calculation.text.environment.target.code</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.540655401B4D03FDD380CAE60CC037D7</StringID>
	<SourceText>data:text/html;base64,</SourceText>
	<TargetText>data:text/html;base64,</TargetText>
	<Comment>com.fmi.calculation.text.data:text/html;base64,</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.55B5F3489CAE0F807A962CFC8959F6D5</StringID>
	<SourceText>{{background}}</SourceText>
	<TargetText>{{background}}</TargetText>
	<Comment>com.fmi.calculation.text.{{background}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.57ED50AA0903D515540752F6518C809F</StringID>
	<SourceText>refresh.object[0]</SourceText>
	<TargetText>refresh.object[0]</TargetText>
	<Comment>com.fmi.calculation.text.refresh.object[0]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.59B6BB0592C3575FE896474A43023DBB</StringID>
	<SourceText> Field References<CR/></SourceText>
	<TargetText> Field References<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Field References_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.5A32B9C677193A0D6B47C96EB1C7ED38</StringID>
	<SourceText> Number Value<CR/></SourceText>
	<TargetText> Number Value<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Number Value_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.5ABDBB39D1F9C589030E34ABCDC03A10</StringID>
	<SourceText>Web</SourceText>
	<TargetText>Web</TargetText>
	<Comment>com.fmi.calculation.text.Web</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.5B7DD9CB90D14BBB9B55FD3157AC03F7</StringID>
	<SourceText>refresh.object[</SourceText>
	<TargetText>refresh.object[</TargetText>
	<Comment>com.fmi.calculation.text.refresh.object[</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.5C4F6533F9C4722A35CF019A1A93ACF2</StringID>
	<SourceText>{{variable-2}}</SourceText>
	<TargetText>{{variable-2}}</TargetText>
	<Comment>com.fmi.calculation.text.{{variable-2}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.5DF1E2A3782CA1E1DF82F0280E2CBD9C</StringID>
	<SourceText> and run from the trigger of your choice<CR/></SourceText>
	<TargetText> and run from the trigger of your choice<CR/></TargetText>
	<Comment>com.fmi.calculation.text. and run from the trigger of your choice_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.5EB445F26C7A13A09AD9CF5343EB63E8</StringID>
	<SourceText>::</SourceText>
	<TargetText>::</TargetText>
	<Comment>com.fmi.calculation.text.::</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.60C61CF7DCFE9B6CC2B38DCEFB4250F7</StringID>
	<SourceText>Let ( $$</SourceText>
	<TargetText>Let ( $$</TargetText>
	<Comment>com.fmi.calculation.text.Let ( $$</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.627339D956E69F4DE92B945DC1B62404</StringID>
	<SourceText>environment.target.isVar</SourceText>
	<TargetText>environment.target.isVar</TargetText>
	<Comment>com.fmi.calculation.text.environment.target.isVar</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.67D9B69D408F64EFFED65ACDC6D7FB01</StringID>
	<SourceText> Editor Font<CR/></SourceText>
	<TargetText> Editor Font<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Editor Font_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.6A3694A72203DD26535D325E9D636D36</StringID>
	<SourceText>#315CAE</SourceText>
	<TargetText>#315CAE</TargetText>
	<Comment>com.fmi.calculation.text.#315CAE</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.71D1C7E521CC7436C3C7B787A00294B7</StringID>
	<SourceText> = </SourceText>
	<TargetText> = </TargetText>
	<Comment>com.fmi.calculation.text. = </Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.766B709EB34B5B3972D50E3450D6B350</StringID>
	<SourceText> String Value<CR/></SourceText>
	<TargetText> String Value<CR/></TargetText>
	<Comment>com.fmi.calculation.text. String Value_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.7867CF717F010476157F74000EE02B5A</StringID>
	<SourceText>execute.layoutName</SourceText>
	<TargetText>execute.layoutName</TargetText>
	<Comment>com.fmi.calculation.text.execute.layoutName</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.78CF554959FE7F319F7188CE9C3C86FB</StringID>
	<SourceText>environment.target.name</SourceText>
	<TargetText>environment.target.name</TargetText>
	<Comment>com.fmi.calculation.text.environment.target.name</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.7E1211308842CDCAD7D6C3D5E85B6E15</StringID>
	<SourceText>{{string}}</SourceText>
	<TargetText>{{string}}</TargetText>
	<Comment>com.fmi.calculation.text.{{string}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.7E38AD4049203D1A054A043C480A46AF</StringID>
	<SourceText>$$CODE1</SourceText>
	<TargetText>$$CODE1</TargetText>
	<Comment>com.fmi.calculation.text.$$CODE1</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.80FF92AF46754BD580FCFB00CD296AB2</StringID>
	<SourceText> Comment<CR/></SourceText>
	<TargetText> Comment<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Comment_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.849CBB33A63E4687CC378EC36F59F120</StringID>
	<SourceText>background</SourceText>
	<TargetText>background</TargetText>
	<Comment>com.fmi.calculation.text.background</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.903FB6935B86678531307A972CDFC6FD</StringID>
	<SourceText>environment</SourceText>
	<TargetText>environment</TargetText>
	<Comment>com.fmi.calculation.text.environment</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.93695E86CABFACE19903DD5BF6DCD52C</StringID>
	<SourceText>{{fmHint}}</SourceText>
	<TargetText>{{fmHint}}</TargetText>
	<Comment>com.fmi.calculation.text.{{fmHint}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.962EABDDC5D2F3F665A87146263CFCC7</StringID>
	<SourceText>variable-2</SourceText>
	<TargetText>variable-2</TargetText>
	<Comment>com.fmi.calculation.text.variable-2</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.9A3FE71A6C20D5C1EC78262CD26249E0</StringID>
	<SourceText>{{builtin}}</SourceText>
	<TargetText>{{builtin}}</TargetText>
	<Comment>com.fmi.calculation.text.{{builtin}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.9B92F21C73763400C4C7AB7663D8936B</StringID>
	<SourceText>bbAutoExecuteToggle</SourceText>
	<TargetText>bbAutoExecuteToggle</TargetText>
	<Comment>com.fmi.calculation.text.bbAutoExecuteToggle</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.A69E775A599E2F7778A03FBC072ABD72</StringID>
	<SourceText>Auto Execute</SourceText>
	<TargetText>Auto Execute</TargetText>
	<Comment>com.fmi.calculation.text.Auto Execute</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.A9CD32B843C78D0D432E12C9FF3E9F13</StringID>
	<SourceText>splitHorizontal</SourceText>
	<TargetText>splitHorizontal</TargetText>
	<Comment>com.fmi.calculation.text.splitHorizontal</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.AA5792FA80B2F64C47461952EA1E42FF</StringID>
	<SourceText>bbEditorEnvironment_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bbEditorEnvironment_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.calculation.text.bbEditorEnvironment_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.B0FF5FB12BBC97BAF49DC09388F82E04</StringID>
	<SourceText>data:text/html,</SourceText>
	<TargetText>data:text/html,</TargetText>
	<Comment>com.fmi.calculation.text.data:text/html,</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.B2B21A27538B45EB482B6BA48F3649C3</StringID>
	<SourceText>autoExecute</SourceText>
	<TargetText>autoExecute</TargetText>
	<Comment>com.fmi.calculation.text.autoExecute</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.B9D262C1FF4C2CA184CB4282576237FE</StringID>
	<SourceText>{{fmSyntax}}</SourceText>
	<TargetText>{{fmSyntax}}</TargetText>
	<Comment>com.fmi.calculation.text.{{fmSyntax}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.BB48CDA9E5A3B8C217F06AC934D3F57B</StringID>
	<SourceText>keyword</SourceText>
	<TargetText>keyword</TargetText>
	<Comment>com.fmi.calculation.text.keyword</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.BF9AA6EEEA8B1FD67730A8FC3690A022</StringID>
	<SourceText>{{fontSize}}</SourceText>
	<TargetText>{{fontSize}}</TargetText>
	<Comment>com.fmi.calculation.text.{{fontSize}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.C19649B8C669AD5A06EC361520204302</StringID>
	<SourceText>comment</SourceText>
	<TargetText>comment</TargetText>
	<Comment>com.fmi.calculation.text.comment</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.C21222B2264642108F83CAC5DF904879</StringID>
	<SourceText>vw_codeMirror_myEditor</SourceText>
	<TargetText>vw_codeMirror_myEditor</TargetText>
	<Comment>com.fmi.calculation.text.vw_codeMirror_myEditor</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.C6EE7884FBC21D3FBAD13E8166C98971</StringID>
	<SourceText>Monospace</SourceText>
	<TargetText>Monospace</TargetText>
	<Comment>com.fmi.calculation.text.Monospace</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.C90EE444ACF31F959B4BC8E9B36828CA</StringID>
	<SourceText>#FFFFFF</SourceText>
	<TargetText>#FFFFFF</TargetText>
	<Comment>com.fmi.calculation.text.#FFFFFF</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.C927A2EA9A558A085DF5C34AB6758E77</StringID>
	<SourceText>#2D714F</SourceText>
	<TargetText>#2D714F</TargetText>
	<Comment>com.fmi.calculation.text.#2D714F</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.C983398CF75C51B5247B7F15759BFD8D</StringID>
	<SourceText>builtin</SourceText>
	<TargetText>builtin</TargetText>
	<Comment>com.fmi.calculation.text.builtin</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.CAE18EB23B4A37C3C92B1BB288B5FAE0</StringID>
	<SourceText>codeMirror.font</SourceText>
	<TargetText>codeMirror.font</TargetText>
	<Comment>com.fmi.calculation.text.codeMirror.font</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.CC0961854D4972684960B339EFFD1515</StringID>
	<SourceText>#750188</SourceText>
	<TargetText>#750188</TargetText>
	<Comment>com.fmi.calculation.text.#750188</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.D319C10DD2BADA1F7F79D935CD29926E</StringID>
	<SourceText> Payload example when using a global variable to store the code<CR/></SourceText>
	<TargetText> Payload example when using a global variable to store the code<CR/></TargetText>
	<Comment>com.fmi.calculation.text. Payload example when using a global variable to store the code_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.D35B931E98E0308F6F48B058360E020B</StringID>
	<SourceText>number</SourceText>
	<TargetText>number</TargetText>
	<Comment>com.fmi.calculation.text.number</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.D368224758B103B0BB2EFF5175339335</StringID>
	<SourceText>]</SourceText>
	<TargetText>]</TargetText>
	<Comment>com.fmi.calculation.text.]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.D39DA613F96695E4BD087D010053D3A6</StringID>
	<SourceText>$</SourceText>
	<TargetText>$</TargetText>
	<Comment>com.fmi.calculation.text.$</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.D4426A2FF6CA83B58F569B000259CC1E</StringID>
	<SourceText>target.webViewer</SourceText>
	<TargetText>target.webViewer</TargetText>
	<Comment>com.fmi.calculation.text.target.webViewer</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.DBA7F6EDDDC0653159590F07B4E4A3A3</StringID>
	<SourceText>bbEditorEnvironment</SourceText>
	<TargetText>bbEditorEnvironment</TargetText>
	<Comment>com.fmi.calculation.text.bbEditorEnvironment</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.DC1756944DEE4A389E862E45F3F658D4</StringID>
	<SourceText>execute</SourceText>
	<TargetText>execute</TargetText>
	<Comment>com.fmi.calculation.text.execute</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.E0E595113F3F39DF6C4EBE976F8134D4</StringID>
	<SourceText>{{comment}}</SourceText>
	<TargetText>{{comment}}</TargetText>
	<Comment>com.fmi.calculation.text.{{comment}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.E9329BC20CD33249A218552D99F2225D</StringID>
	<SourceText>environment.target.webViewer</SourceText>
	<TargetText>environment.target.webViewer</TargetText>
	<Comment>com.fmi.calculation.text.environment.target.webViewer</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.F132CB085ABC614FF861F076927084FA</StringID>
	<SourceText>{{fontName}}</SourceText>
	<TargetText>{{fontName}}</TargetText>
	<Comment>com.fmi.calculation.text.{{fontName}}</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.F23779B2B998E4DCD2DA1C18317D8A9E</StringID>
	<SourceText>windowMode</SourceText>
	<TargetText>windowMode</TargetText>
	<Comment>com.fmi.calculation.text.windowMode</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.F369BE688E9E042962A98A44BA22BA54</StringID>
	<SourceText> FileMaker Functions<CR/></SourceText>
	<TargetText> FileMaker Functions<CR/></TargetText>
	<Comment>com.fmi.calculation.text. FileMaker Functions_CR/_</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.calculation.text.F8A6359DCC234555585C0AFE6A30C4CE</StringID>
	<SourceText>Courier</SourceText>
	<TargetText>Courier</TargetText>
	<Comment>com.fmi.calculation.text.Courier</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.0442B3947E3269FC32DAAD3CCF2B91A1</StringID>
	<SourceText>wv_codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>wv_codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.wv_codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.14278C793214B42993BE810426AD69E7</StringID>
	<SourceText>bbAutoExecuteToggle_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bbAutoExecuteToggle_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.bbAutoExecuteToggle_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.34B1B4102613DB240B386F7E6B1F5078</StringID>
	<SourceText>bbCodeMirrorHeader_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bbCodeMirrorHeader_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.bbCodeMirrorHeader_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.8A507634560A7EC23677BDCA8F56C657</StringID>
	<SourceText>bAutoExecuteToggleFalse_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bAutoExecuteToggleFalse_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.bAutoExecuteToggleFalse_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.91555BF6296FEC2D10C8E3DD759E9E24</StringID>
	<SourceText>oCodeMirrorRectangle_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>oCodeMirrorRectangle_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.oCodeMirrorRectangle_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.AA5792FA80B2F64C47461952EA1E42FF</StringID>
	<SourceText>bbEditorEnvironment_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bbEditorEnvironment_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.bbEditorEnvironment_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.B70C08AEE5EE9C60C8A171FA4E5EA44B</StringID>
	<SourceText>codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.codeMirror_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.layoutobject.EDFF5F23FE671B89F2F6C09CD05CA96F</StringID>
	<SourceText>bAutoExecuteToggleTrue_[&lt;^FMXML_AddonInstanceUUID&gt;]</SourceText>
	<TargetText>bAutoExecuteToggleTrue_[&lt;^FMXML_AddonInstanceUUID&gt;]</TargetText>
	<Comment>com.fmi.layoutobject.bAutoExecuteToggleTrue_[&lt;^FMXML_AddonInstanceUUID&gt;]</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.01BD71551E6EA9C4B420E657AB70A909</StringID>
	<SourceText>codeMirrorSetEnviroment</SourceText>
	<TargetText>codeMirrorSetEnviroment</TargetText>
	<Comment>com.fmi.script.codeMirrorSetEnviroment</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.4E268D86B75D2E68BEB654D284840953</StringID>
	<SourceText>codeMirrorTriggerExample</SourceText>
	<TargetText>codeMirrorTriggerExample</TargetText>
	<Comment>com.fmi.script.codeMirrorTriggerExample</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.6D20A219DC8A6AC00DED763346590B75</StringID>
	<SourceText>codeMirrorSaveCode1</SourceText>
	<TargetText>codeMirrorSaveCode1</TargetText>
	<Comment>com.fmi.script.codeMirrorSaveCode1</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.92D2D8B11184B667E406A7CA8D5AE70C</StringID>
	<SourceText>codeMirrorInitialise</SourceText>
	<TargetText>codeMirrorInitialise</TargetText>
	<Comment>com.fmi.script.codeMirrorInitialise</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.972D007BAAEF6B6A927BCABC62B07B53</StringID>
	<SourceText>codeMirrorSetCode</SourceText>
	<TargetText>codeMirrorSetCode</TargetText>
	<Comment>com.fmi.script.codeMirrorSetCode</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.9794C736321E8F0BD44EA20AAE2C5319</StringID>
	<SourceText>codeMirrorEvaluateCode</SourceText>
	<TargetText>codeMirrorEvaluateCode</TargetText>
	<Comment>com.fmi.script.codeMirrorEvaluateCode</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.BF1AFD38772E2BB6DD63AD5122B377E2</StringID>
	<SourceText>codeMirrorSaveCode2</SourceText>
	<TargetText>codeMirrorSaveCode2</TargetText>
	<Comment>com.fmi.script.codeMirrorSaveCode2</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.script.folder.8361BB0AC82834D06A6408A7A8F86603</StringID>
	<SourceText>CodeMirror</SourceText>
	<TargetText>CodeMirror</TargetText>
	<Comment>com.fmi.script.folder.CodeMirror</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.08C48CE4A6E57E87E95164205E176DE9</StringID>
	<SourceText>SAVE CODE</SourceText>
	<TargetText>SAVE CODE</TargetText>
	<Comment>com.fmi.scriptstep.text.SAVE CODE</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.0C398FD1D37B566A2B7A3FE5C2A2A017</StringID>
	<SourceText>Target is a global variable</SourceText>
	<TargetText>Target is a global variable</TargetText>
	<Comment>com.fmi.scriptstep.text.Target is a global variable</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.0F7330E38ABB76555298000F537C44F0</StringID>
	<SourceText>Write response back to dataViewer</SourceText>
	<TargetText>Write response back to dataViewer</TargetText>
	<Comment>com.fmi.scriptstep.text.Write response back to dataViewer</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.111839C0417DE18B8CF74F955F50BD29</StringID>
	<SourceText>Dependencies: <TAB/><TAB/>Script Parameter Payload</SourceText>
	<TargetText>Dependencies: <TAB/><TAB/>Script Parameter Payload</TargetText>
	<Comment>com.fmi.scriptstep.text.Dependencies: _TAB/__TAB/_Script Parameter Payload</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.114540F2D76638BE510A127AA1E4EDB7</StringID>
	<SourceText>Refresh CodeMirror Objects</SourceText>
	<TargetText>Refresh CodeMirror Objects</TargetText>
	<Comment>com.fmi.scriptstep.text.Refresh CodeMirror Objects</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.130314B4242B82B8DDCCFBAC9CB58158</StringID>
	<SourceText>CodeMirror is Licensed under Creative Commons Attribution 4.0 International Public License<CR/><CR/>https://codemirror.net</SourceText>
	<TargetText>CodeMirror is Licensed under Creative Commons Attribution 4.0 International Public License<CR/><CR/>https://codemirror.net</TargetText>
	<Comment>com.fmi.scriptstep.text.CodeMirror is Licensed under Creative Commons Attribution 4.0 International Public License_CR/__CR/_https://codemirror.net</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.1865B3E4E934128F13E00133BC4B82B9</StringID>
	<SourceText>This is used when bouncing the code over to AutoExecute</SourceText>
	<TargetText>This is used when bouncing the code over to AutoExecute</TargetText>
	<Comment>com.fmi.scriptstep.text.This is used when bouncing the code over to AutoExecute</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.20024956E1287655E3102A813E03AB20</StringID>
	<SourceText>INITIALISE CODEMIRROR ENVIRONMENT</SourceText>
	<TargetText>INITIALISE CODEMIRROR ENVIRONMENT</TargetText>
	<Comment>com.fmi.scriptstep.text.INITIALISE CODEMIRROR ENVIRONMENT</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.23C6D56F8540ABDA0B1C9B8929C6E409</StringID>
	<SourceText>Run Evaluation part as PSOS then return back to <CR/>this script and write the response to the <CR/>dataviewer instance of codeMirror</SourceText>
	<TargetText>Run Evaluation part as PSOS then return back to <CR/>this script and write the response to the <CR/>dataviewer instance of codeMirror</TargetText>
	<Comment>com.fmi.scriptstep.text.Run Evaluation part as PSOS then return back to _CR/_this script and write the response to the _CR/_dataviewer instance of codeMirror</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.276573AA2901BC7A7C8294C179C66722</StringID>
	<SourceText>SET EDITOR ENVIROMENT</SourceText>
	<TargetText>SET EDITOR ENVIROMENT</TargetText>
	<Comment>com.fmi.scriptstep.text.SET EDITOR ENVIROMENT</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.281A59A2DCAFAA6240DACC2C3D86F83F</StringID>
	<SourceText>Segment to run on Server or Locally when application is not hosted</SourceText>
	<TargetText>Segment to run on Server or Locally when application is not hosted</TargetText>
	<Comment>com.fmi.scriptstep.text.Segment to run on Server or Locally when application is not hosted</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.2B6B0CDCBEF523C8F3F94E2A5D72D64B</StringID>
	<SourceText>Defaults</SourceText>
	<TargetText>Defaults</TargetText>
	<Comment>com.fmi.scriptstep.text.Defaults</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.2C68C3A39FE43680C00C77370C6BEC18</StringID>
	<SourceText>Toggle between user view modes in payload editor</SourceText>
	<TargetText>Toggle between user view modes in payload editor</TargetText>
	<Comment>com.fmi.scriptstep.text.Toggle between user view modes in payload editor</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.2E657D4A040A267E3EB0A0A150840AB8</StringID>
	<SourceText>Compatibility: <TAB/><TAB/>All platforms</SourceText>
	<TargetText>Compatibility: <TAB/><TAB/>All platforms</TargetText>
	<Comment>com.fmi.scriptstep.text.Compatibility: _TAB/__TAB/_All platforms</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.39A3E69D122B329BEB2A487A8DC0EBFD</StringID>
	<SourceText>Written on 10.08.2021 |  Updated: 00.00.0000  | Valid: Yes</SourceText>
	<TargetText>Written on 10.08.2021 |  Updated: 00.00.0000  | Valid: Yes</TargetText>
	<Comment>com.fmi.scriptstep.text.Written on 10.08.2021 |  Updated: 00.00.0000  | Valid: Yes</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.3CAB2A86B18F14A6D1EBCF41B56B99A1</StringID>
	<SourceText>RUN CODE EVALUATION IF AUTOEVALUATE IS ON</SourceText>
	<TargetText>RUN CODE EVALUATION IF AUTOEVALUATE IS ON</TargetText>
	<Comment>com.fmi.scriptstep.text.RUN CODE EVALUATION IF AUTOEVALUATE IS ON</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.3CD4459E3F7643270CAAFCA827EB5154</StringID>
	<SourceText>INITIALISE CODEMIRROR EDITOR</SourceText>
	<TargetText>INITIALISE CODEMIRROR EDITOR</TargetText>
	<Comment>com.fmi.scriptstep.text.INITIALISE CODEMIRROR EDITOR</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.3E3550A3FE6FF0774795B58A6F8959BB</StringID>
	<SourceText>Load HTML into target WebViewer</SourceText>
	<TargetText>Load HTML into target WebViewer</TargetText>
	<Comment>com.fmi.scriptstep.text.Load HTML into target WebViewer</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.3E9EC3132D364D20340E1133C3CFAFC4</StringID>
	<SourceText>Test for server or local instance and determine task split</SourceText>
	<TargetText>Test for server or local instance and determine task split</TargetText>
	<Comment>com.fmi.scriptstep.text.Test for server or local instance and determine task split</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.4F0E22B980284C1DCD1AE2C68F719065</StringID>
	<SourceText>CodeMirror Components</SourceText>
	<TargetText>CodeMirror Components</TargetText>
	<Comment>com.fmi.scriptstep.text.CodeMirror Components</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.5085D0B7CEDC0DB2BB0E53FFC609DBE7</StringID>
	<SourceText>Loads a code and settings into targeted WebViewer</SourceText>
	<TargetText>Loads a code and settings into targeted WebViewer</TargetText>
	<Comment>com.fmi.scriptstep.text.Loads a code and settings into targeted WebViewer</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.530986A5E3A21100C6EA303C0900189E</StringID>
	<SourceText>JSONSetElement ( &quot;&quot; ; <CR/><CR/><TAB/>[ &quot;targetWebViewer&quot; ; &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; 1 ] ;<CR/><CR/><TAB/>[ &quot;width&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;width&quot; ) ; 2 ] ;<CR/><TAB/>[ &quot;height&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;height&quot; ) ; 2 ] ;<CR/><CR/><TAB/>[ &quot;defaultArray.color.background&quot; ; &quot;#FFFFFF&quot; ; 1 ] ; // widgets background colour<CR/><CR/><TAB/>[ &quot;defaultArray.endCap&quot; ; &quot;round&quot; ; 1 ] ; // round, butt, square - or empty<TAB/><CR/><TAB/>[ &quot;defaultArray.stroke&quot; ; 14 ; 2 ] ; // default stroke<CR/><TAB/>[ &quot;defaultArray.padding&quot; ; 4 ; 2 ] // padding between the rings<CR/><CR/><TAB/>[ &quot;dataArray.ring[+]value&quot; ; 64 ; 2 ] ;<CR/><TAB/>[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#DF2F5D&quot; ; 1 ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#F9D4DF&quot; ; 1 ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[:]cap&quot; ; &quot;round&quot; ; 1 ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ] ; // set json type to 6 if you want default stroke to rule, otherwise type 2<CR/><CR/><TAB/>[ &quot;dataArray.ring[+]value&quot; ; 58 ; 2 ] ;<CR/><TAB/>[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#67BD46&quot; ; 1 ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#E2F2D9&quot; ; 1 ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[:]endCap&quot; ; &quot;&quot; ; 1 ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ] ; // set json type to 6 if you want default stroke to rule, otherwise type 2<CR/><CR/><TAB/>[ &quot;dataArray.ring[+]value&quot; ; 38 ; 2 ] ;<CR/><TAB/>[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#01B1DE&quot; ; 1 ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#D6EFF7&quot; ; 1 ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[:]cap&quot; ; &quot;&quot; ; 1 ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ]  // set json type to 6 if you want default stroke to rule, otherwise type 2<CR/><CR/>)<CR/><CR/>or<CR/><CR/>JSONSetElement ( &quot;&quot; ; <CR/><CR/><TAB/>[ &quot;targetWebViewer&quot; ; &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; JSONString ] ;<CR/><CR/><TAB/>[ &quot;width&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;width&quot; ) ; JSONNumber ] ;<CR/><TAB/>[ &quot;height&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;height&quot; ) ; JSONNumber ] ;<CR/><CR/><TAB/>[ &quot;defaultArray.color.background&quot; ; &quot;#FFFFFF&quot; ; JSONString ] ; // widgets background colour<CR/><CR/><TAB/>[ &quot;defaultArray.endCap&quot; ; &quot;round&quot; ; JSONString ] ; // round, butt, square - or empty<TAB/><CR/><TAB/>[ &quot;defaultArray.stroke&quot; ; 14 ; JSONNumber ] ; // default stroke<CR/><TAB/>[ &quot;defaultArray.padding&quot; ; 4 ; JSONNumber ] // padding between the rings<CR/><CR/><TAB/>[ &quot;dataArray.ring[0]value&quot; ; 64 ; JSONNumber ] ;<CR/><TAB/>[ &quot;dataArray.ring[0]color.foreground&quot; ; &quot;#DF2F5D&quot; ; JSONString ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[0]color.background&quot; ; &quot;#F9D4DF&quot; ; JSONString ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[0]cap&quot; ; &quot;round&quot; ; JSONString ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[0]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber<CR/><CR/><TAB/>[ &quot;dataArray.ring[1]value&quot; ; 58 ; JSONNumber ] ;<CR/><TAB/>[ &quot;dataArray.ring[1]color.foreground&quot; ; &quot;#67BD46&quot; ; JSONString ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[1]color.background&quot; ; &quot;#E2F2D9&quot; ; JSONString ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[1]endCap&quot; ; &quot;&quot; ; JSONString ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[1]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber<CR/><CR/><TAB/>[ &quot;dataArray.ring[2]value&quot; ; 38 ; JSONNumber ] ;<CR/><TAB/>[ &quot;dataArray.ring[2]color.foreground&quot; ; &quot;#01B1DE&quot; ; JSONString ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[2]color.background&quot; ; &quot;#D6EFF7&quot; ; JSONString ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[2]cap&quot; ; &quot;&quot; ; JSONString ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[2]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber<CR/><CR/>)</SourceText>
	<TargetText>JSONSetElement ( &quot;&quot; ; <CR/><CR/><TAB/>[ &quot;targetWebViewer&quot; ; &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; 1 ] ;<CR/><CR/><TAB/>[ &quot;width&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;width&quot; ) ; 2 ] ;<CR/><TAB/>[ &quot;height&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;height&quot; ) ; 2 ] ;<CR/><CR/><TAB/>[ &quot;defaultArray.color.background&quot; ; &quot;#FFFFFF&quot; ; 1 ] ; // widgets background colour<CR/><CR/><TAB/>[ &quot;defaultArray.endCap&quot; ; &quot;round&quot; ; 1 ] ; // round, butt, square - or empty<TAB/><CR/><TAB/>[ &quot;defaultArray.stroke&quot; ; 14 ; 2 ] ; // default stroke<CR/><TAB/>[ &quot;defaultArray.padding&quot; ; 4 ; 2 ] // padding between the rings<CR/><CR/><TAB/>[ &quot;dataArray.ring[+]value&quot; ; 64 ; 2 ] ;<CR/><TAB/>[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#DF2F5D&quot; ; 1 ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#F9D4DF&quot; ; 1 ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[:]cap&quot; ; &quot;round&quot; ; 1 ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ] ; // set json type to 6 if you want default stroke to rule, otherwise type 2<CR/><CR/><TAB/>[ &quot;dataArray.ring[+]value&quot; ; 58 ; 2 ] ;<CR/><TAB/>[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#67BD46&quot; ; 1 ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#E2F2D9&quot; ; 1 ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[:]endCap&quot; ; &quot;&quot; ; 1 ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ] ; // set json type to 6 if you want default stroke to rule, otherwise type 2<CR/><CR/><TAB/>[ &quot;dataArray.ring[+]value&quot; ; 38 ; 2 ] ;<CR/><TAB/>[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#01B1DE&quot; ; 1 ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#D6EFF7&quot; ; 1 ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[:]cap&quot; ; &quot;&quot; ; 1 ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ]  // set json type to 6 if you want default stroke to rule, otherwise type 2<CR/><CR/>)<CR/><CR/>or<CR/><CR/>JSONSetElement ( &quot;&quot; ; <CR/><CR/><TAB/>[ &quot;targetWebViewer&quot; ; &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; JSONString ] ;<CR/><CR/><TAB/>[ &quot;width&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;width&quot; ) ; JSONNumber ] ;<CR/><TAB/>[ &quot;height&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;height&quot; ) ; JSONNumber ] ;<CR/><CR/><TAB/>[ &quot;defaultArray.color.background&quot; ; &quot;#FFFFFF&quot; ; JSONString ] ; // widgets background colour<CR/><CR/><TAB/>[ &quot;defaultArray.endCap&quot; ; &quot;round&quot; ; JSONString ] ; // round, butt, square - or empty<TAB/><CR/><TAB/>[ &quot;defaultArray.stroke&quot; ; 14 ; JSONNumber ] ; // default stroke<CR/><TAB/>[ &quot;defaultArray.padding&quot; ; 4 ; JSONNumber ] // padding between the rings<CR/><CR/><TAB/>[ &quot;dataArray.ring[0]value&quot; ; 64 ; JSONNumber ] ;<CR/><TAB/>[ &quot;dataArray.ring[0]color.foreground&quot; ; &quot;#DF2F5D&quot; ; JSONString ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[0]color.background&quot; ; &quot;#F9D4DF&quot; ; JSONString ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[0]cap&quot; ; &quot;round&quot; ; JSONString ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[0]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber<CR/><CR/><TAB/>[ &quot;dataArray.ring[1]value&quot; ; 58 ; JSONNumber ] ;<CR/><TAB/>[ &quot;dataArray.ring[1]color.foreground&quot; ; &quot;#67BD46&quot; ; JSONString ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[1]color.background&quot; ; &quot;#E2F2D9&quot; ; JSONString ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[1]endCap&quot; ; &quot;&quot; ; JSONString ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[1]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber<CR/><CR/><TAB/>[ &quot;dataArray.ring[2]value&quot; ; 38 ; JSONNumber ] ;<CR/><TAB/>[ &quot;dataArray.ring[2]color.foreground&quot; ; &quot;#01B1DE&quot; ; JSONString ] ; // surface colour of completed area<CR/><TAB/>[ &quot;dataArray.ring[2]color.background&quot; ; &quot;#D6EFF7&quot; ; JSONString ] ; // surface colour of remaining area <CR/><TAB/>[ &quot;dataArray.ring[2]cap&quot; ; &quot;&quot; ; JSONString ] ; // round, butt, square - or empty<CR/><TAB/>[ &quot;dataArray.ring[2]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber<CR/><CR/>)</TargetText>
	<Comment>com.fmi.scriptstep.text.JSONSetElement ( &quot;&quot; ; _CR/__CR/__TAB/_[ &quot;targetWebViewer&quot; ; &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; 1 ] ;_CR/__CR/__TAB/_[ &quot;width&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;width&quot; ) ; 2 ] ;_CR/__TAB/_[ &quot;height&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;height&quot; ) ; 2 ] ;_CR/__CR/__TAB/_[ &quot;defaultArray.color.background&quot; ; &quot;#FFFFFF&quot; ; 1 ] ; // widgets background colour_CR/__CR/__TAB/_[ &quot;defaultArray.endCap&quot; ; &quot;round&quot; ; 1 ] ; // round, butt, square - or empty_TAB/__CR/__TAB/_[ &quot;defaultArray.stroke&quot; ; 14 ; 2 ] ; // default stroke_CR/__TAB/_[ &quot;defaultArray.padding&quot; ; 4 ; 2 ] // padding between the rings_CR/__CR/__TAB/_[ &quot;dataArray.ring[+]value&quot; ; 64 ; 2 ] ;_CR/__TAB/_[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#DF2F5D&quot; ; 1 ] ; // surface colour of completed area_CR/__TAB/_[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#F9D4DF&quot; ; 1 ] ; // surface colour of remaining area _CR/__TAB/_[ &quot;dataArray.ring[:]cap&quot; ; &quot;round&quot; ; 1 ] ; // round, butt, square - or empty_CR/__TAB/_[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ] ; // set json type to 6 if you want default stroke to rule, otherwise type 2_CR/__CR/__TAB/_[ &quot;dataArray.ring[+]value&quot; ; 58 ; 2 ] ;_CR/__TAB/_[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#67BD46&quot; ; 1 ] ; // surface colour of completed area_CR/__TAB/_[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#E2F2D9&quot; ; 1 ] ; // surface colour of remaining area _CR/__TAB/_[ &quot;dataArray.ring[:]endCap&quot; ; &quot;&quot; ; 1 ] ; // round, butt, square - or empty_CR/__TAB/_[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ] ; // set json type to 6 if you want default stroke to rule, otherwise type 2_CR/__CR/__TAB/_[ &quot;dataArray.ring[+]value&quot; ; 38 ; 2 ] ;_CR/__TAB/_[ &quot;dataArray.ring[:]color.foreground&quot; ; &quot;#01B1DE&quot; ; 1 ] ; // surface colour of completed area_CR/__TAB/_[ &quot;dataArray.ring[:]color.background&quot; ; &quot;#D6EFF7&quot; ; 1 ] ; // surface colour of remaining area _CR/__TAB/_[ &quot;dataArray.ring[:]cap&quot; ; &quot;&quot; ; 1 ] ; // round, butt, square - or empty_CR/__TAB/_[ &quot;dataArray.ring[:]stroke&quot; ; 0 ; 6 ]  // set json type to 6 if you want default stroke to rule, otherwise type 2_CR/__CR/_)_CR/__CR/_or_CR/__CR/_JSONSetElement ( &quot;&quot; ; _CR/__CR/__TAB/_[ &quot;targetWebViewer&quot; ; &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; JSONString ] ;_CR/__CR/__TAB/_[ &quot;width&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;width&quot; ) ; JSONNumber ] ;_CR/__TAB/_[ &quot;height&quot; ; GetLayoutObjectAttribute ( &quot;wv_progressRings_[&lt;^FMXML_AddonInstanceUUID&gt;]&quot; ; &quot;height&quot; ) ; JSONNumber ] ;_CR/__CR/__TAB/_[ &quot;defaultArray.color.background&quot; ; &quot;#FFFFFF&quot; ; JSONString ] ; // widgets background colour_CR/__CR/__TAB/_[ &quot;defaultArray.endCap&quot; ; &quot;round&quot; ; JSONString ] ; // round, butt, square - or empty_TAB/__CR/__TAB/_[ &quot;defaultArray.stroke&quot; ; 14 ; JSONNumber ] ; // default stroke_CR/__TAB/_[ &quot;defaultArray.padding&quot; ; 4 ; JSONNumber ] // padding between the rings_CR/__CR/__TAB/_[ &quot;dataArray.ring[0]value&quot; ; 64 ; JSONNumber ] ;_CR/__TAB/_[ &quot;dataArray.ring[0]color.foreground&quot; ; &quot;#DF2F5D&quot; ; JSONString ] ; // surface colour of completed area_CR/__TAB/_[ &quot;dataArray.ring[0]color.background&quot; ; &quot;#F9D4DF&quot; ; JSONString ] ; // surface colour of remaining area _CR/__TAB/_[ &quot;dataArray.ring[0]cap&quot; ; &quot;round&quot; ; JSONString ] ; // round, butt, square - or empty_CR/__TAB/_[ &quot;dataArray.ring[0]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber_CR/__CR/__TAB/_[ &quot;dataArray.ring[1]value&quot; ; 58 ; JSONNumber ] ;_CR/__TAB/_[ &quot;dataArray.ring[1]color.foreground&quot; ; &quot;#67BD46&quot; ; JSONString ] ; // surface colour of completed area_CR/__TAB/_[ &quot;dataArray.ring[1]color.background&quot; ; &quot;#E2F2D9&quot; ; JSONString ] ; // surface colour of remaining area _CR/__TAB/_[ &quot;dataArray.ring[1]endCap&quot; ; &quot;&quot; ; JSONString ] ; // round, butt, square - or empty_CR/__TAB/_[ &quot;dataArray.ring[1]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber_CR/__CR/__TAB/_[ &quot;dataArray.ring[2]value&quot; ; 38 ; JSONNumber ] ;_CR/__TAB/_[ &quot;dataArray.ring[2]color.foreground&quot; ; &quot;#01B1DE&quot; ; JSONString ] ; // surface colour of completed area_CR/__TAB/_[ &quot;dataArray.ring[2]color.background&quot; ; &quot;#D6EFF7&quot; ; JSONString ] ; // surface colour of remaining area _CR/__TAB/_[ &quot;dataArray.ring[2]cap&quot; ; &quot;&quot; ; JSONString ] ; // round, butt, square - or empty_CR/__TAB/_[ &quot;dataArray.ring[2]stroke&quot; ; 0 ; JSONNull ] ; // set json type to JSONNull if you want default stroke to rule, otherwise type JSONNumber_CR/__CR/_)</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.572397DF8B23222092CA5CB23F01948E</StringID>
	<SourceText>Perform Auto Execute if applicable</SourceText>
	<TargetText>Perform Auto Execute if applicable</TargetText>
	<Comment>com.fmi.scriptstep.text.Perform Auto Execute if applicable</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.598E620E6C6BFA69D18645D081F8AE37</StringID>
	<SourceText>LOAD CODE INTO CODEMIRROR EDITOR</SourceText>
	<TargetText>LOAD CODE INTO CODEMIRROR EDITOR</TargetText>
	<Comment>com.fmi.scriptstep.text.LOAD CODE INTO CODEMIRROR EDITOR</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.5FD1D764FFD719A9AA1709D3BEB3F07D</StringID>
	<SourceText>------------------------------------------------------------------------------------------------</SourceText>
	<TargetText>------------------------------------------------------------------------------------------------</TargetText>
	<Comment>com.fmi.scriptstep.text.------------------------------------------------------------------------------------------------</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.64982AF53204E06416D3CC4F80E54978</StringID>
	<SourceText>Set the trigger of your choice to launch the script below with the payload modified as you please</SourceText>
	<TargetText>Set the trigger of your choice to launch the script below with the payload modified as you please</TargetText>
	<Comment>com.fmi.scriptstep.text.Set the trigger of your choice to launch the script below with the payload modified as you please</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.67FE106EA68A8A008119670EBDECB91C</StringID>
	<SourceText>Saves code from CodeMirror Widget to target</SourceText>
	<TargetText>Saves code from CodeMirror Widget to target</TargetText>
	<Comment>com.fmi.scriptstep.text.Saves code from CodeMirror Widget to target</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.6C2F7E3AD0E165EEA8A707476634CCAC</StringID>
	<SourceText>SET TARGET WEBVIEWER</SourceText>
	<TargetText>SET TARGET WEBVIEWER</TargetText>
	<Comment>com.fmi.scriptstep.text.SET TARGET WEBVIEWER</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.6C3CA46567D42B24E48115690D107F5F</StringID>
	<SourceText>JSONSetElement ( &quot;&quot; ; <CR/><CR/><TAB/>[ &quot;target.layout&quot; ; JSONGetElement ( $param ; &quot;execute.layoutName&quot; ) ; 1 ] ;<CR/><TAB/>[ &quot;code&quot; ; JSONGetElement ( $param ; &quot;execute.code&quot; ) ; 1 ] ;<CR/><TAB/>[ &quot;target.recordNumber&quot; ; JSONGetElement ( $param ; &quot;execute.recordNumber&quot; ) ; 2 ]<CR/><CR/>)</SourceText>
	<TargetText>JSONSetElement ( &quot;&quot; ; <CR/><CR/><TAB/>[ &quot;target.layout&quot; ; JSONGetElement ( $param ; &quot;execute.layoutName&quot; ) ; 1 ] ;<CR/><TAB/>[ &quot;code&quot; ; JSONGetElement ( $param ; &quot;execute.code&quot; ) ; 1 ] ;<CR/><TAB/>[ &quot;target.recordNumber&quot; ; JSONGetElement ( $param ; &quot;execute.recordNumber&quot; ) ; 2 ]<CR/><CR/>)</TargetText>
	<Comment>com.fmi.scriptstep.text.JSONSetElement ( &quot;&quot; ; _CR/__CR/__TAB/_[ &quot;target.layout&quot; ; JSONGetElement ( $param ; &quot;execute.layoutName&quot; ) ; 1 ] ;_CR/__TAB/_[ &quot;code&quot; ; JSONGetElement ( $param ; &quot;execute.code&quot; ) ; 1 ] ;_CR/__TAB/_[ &quot;target.recordNumber&quot; ; JSONGetElement ( $param ; &quot;execute.recordNumber&quot; ) ; 2 ]_CR/__CR/_)</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.6E93D27030534AD82F0364250B306C64</StringID>
	<SourceText>Subscripts Called: <TAB/>None</SourceText>
	<TargetText>Subscripts Called: <TAB/>None</TargetText>
	<Comment>com.fmi.scriptstep.text.Subscripts Called: _TAB/_None</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.7713354A76213209FB31D6B038EF791C</StringID>
	<SourceText>Run Locally in a card window</SourceText>
	<TargetText>Run Locally in a card window</TargetText>
	<Comment>com.fmi.scriptstep.text.Run Locally in a card window</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.779C3C2F7F21D07006853682DA704598</StringID>
	<SourceText>Merge defaults, hinting and syntax library with code editor html</SourceText>
	<TargetText>Merge defaults, hinting and syntax library with code editor html</TargetText>
	<Comment>com.fmi.scriptstep.text.Merge defaults, hinting and syntax library with code editor html</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.792EBC91E09127C8D24C5CC3903E34AD</StringID>
	<SourceText>Written on 03.05.2025 |  Updated: 00.00.0000  | Valid: Yes  |  By: jonni@me.com</SourceText>
	<TargetText>Written on 03.05.2025 |  Updated: 00.00.0000  | Valid: Yes  |  By: jonni@me.com</TargetText>
	<Comment>com.fmi.scriptstep.text.Written on 03.05.2025 |  Updated: 00.00.0000  | Valid: Yes  |  By: jonni@me.com</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.7FDDC90736002A2B2E394BC36BF4E7FC</StringID>
	<SourceText>Then we need a card window to pick from</SourceText>
	<TargetText>Then we need a card window to pick from</TargetText>
	<Comment>com.fmi.scriptstep.text.Then we need a card window to pick from</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.8052EFD8D7BE5878346029DA4B80BB96</StringID>
	<SourceText>(function(mod) {<CR/>    if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) mod(require(&quot;../../lib/codemirror&quot;));<CR/>    else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) define([&quot;../../lib/codemirror&quot;], mod);<CR/>    else mod(CodeMirror);<CR/>})(function(CodeMirror) {<CR/>    &quot;use strict&quot;;<CR/><CR/>    CodeMirror.defineMode(&quot;filemaker&quot;, function() {<CR/>        return {<CR/>            startState: function() {<CR/>                return { };<CR/>            },<CR/>            token: function(stream) {<CR/>                if (stream.match(/\/\/.*/)) {<CR/>                    return &quot;comment&quot;; // Comments in green<CR/>                }<CR/>                if (stream.match(/&quot;[^&quot;]*&quot;/)) {<CR/>                    return &quot;string&quot;; // Strings in red<CR/>                }<CR/>                if (stream.match(/\b\d+\b/)) {<CR/>                    return &quot;number&quot;; // Numbers in orange<CR/>                }<CR/>                if (stream.match(/\b[a-zA-Z_][a-zA-Z0-9_]*::[a-zA-Z_][a-zA-Z0-9_]*\b/)) {<CR/>                    return &quot;variable-2&quot;; // Field references in blue<CR/>                }<CR/>                if (stream.match(/\b(Get\s?\(.*?\))\b/)) {<CR/>                    return &quot;builtin&quot;; // Get() functions in a distinct style<CR/>                }<CR/>                if (stream.match(/\b[A-Z][a-zA-Z]*\b/)) {<CR/>                    return &quot;keyword&quot;; // FileMaker functions in bold<CR/>                }<CR/>                stream.next();<CR/>                return null;<CR/>            }<CR/>        };<CR/>    });<CR/><CR/>    CodeMirror.defineMIME(&quot;text/x-filemaker&quot;, {<CR/>        name: &quot;filemaker&quot;<CR/>    });<CR/>});</SourceText>
	<TargetText>(function(mod) {<CR/>    if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) mod(require(&quot;../../lib/codemirror&quot;));<CR/>    else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) define([&quot;../../lib/codemirror&quot;], mod);<CR/>    else mod(CodeMirror);<CR/>})(function(CodeMirror) {<CR/>    &quot;use strict&quot;;<CR/><CR/>    CodeMirror.defineMode(&quot;filemaker&quot;, function() {<CR/>        return {<CR/>            startState: function() {<CR/>                return { };<CR/>            },<CR/>            token: function(stream) {<CR/>                if (stream.match(/\/\/.*/)) {<CR/>                    return &quot;comment&quot;; // Comments in green<CR/>                }<CR/>                if (stream.match(/&quot;[^&quot;]*&quot;/)) {<CR/>                    return &quot;string&quot;; // Strings in red<CR/>                }<CR/>                if (stream.match(/\b\d+\b/)) {<CR/>                    return &quot;number&quot;; // Numbers in orange<CR/>                }<CR/>                if (stream.match(/\b[a-zA-Z_][a-zA-Z0-9_]*::[a-zA-Z_][a-zA-Z0-9_]*\b/)) {<CR/>                    return &quot;variable-2&quot;; // Field references in blue<CR/>                }<CR/>                if (stream.match(/\b(Get\s?\(.*?\))\b/)) {<CR/>                    return &quot;builtin&quot;; // Get() functions in a distinct style<CR/>                }<CR/>                if (stream.match(/\b[A-Z][a-zA-Z]*\b/)) {<CR/>                    return &quot;keyword&quot;; // FileMaker functions in bold<CR/>                }<CR/>                stream.next();<CR/>                return null;<CR/>            }<CR/>        };<CR/>    });<CR/><CR/>    CodeMirror.defineMIME(&quot;text/x-filemaker&quot;, {<CR/>        name: &quot;filemaker&quot;<CR/>    });<CR/>});</TargetText>
	<Comment>com.fmi.scriptstep.text.(function(mod) {_CR/_    if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) mod(require(&quot;../../lib/codemirror&quot;));_CR/_    else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) define([&quot;../../lib/codemirror&quot;], mod);_CR/_    else mod(CodeMirror);_CR/_})(function(CodeMirror) {_CR/_    &quot;use strict&quot;;_CR/__CR/_    CodeMirror.defineMode(&quot;filemaker&quot;, function() {_CR/_        return {_CR/_            startState: function() {_CR/_                return { };_CR/_            },_CR/_            token: function(stream) {_CR/_                if (stream.match(/\/\/.*/)) {_CR/_                    return &quot;comment&quot;; // Comments in green_CR/_                }_CR/_                if (stream.match(/&quot;[^&quot;]*&quot;/)) {_CR/_                    return &quot;string&quot;; // Strings in red_CR/_                }_CR/_                if (stream.match(/\b\d+\b/)) {_CR/_                    return &quot;number&quot;; // Numbers in orange_CR/_                }_CR/_                if (stream.match(/\b[a-zA-Z_][a-zA-Z0-9_]*::[a-zA-Z_][a-zA-Z0-9_]*\b/)) {_CR/_                    return &quot;variable-2&quot;; // Field references in blue_CR/_                }_CR/_                if (stream.match(/\b(Get\s?\(.*?\))\b/)) {_CR/_                    return &quot;builtin&quot;; // Get() functions in a distinct style_CR/_                }_CR/_                if (stream.match(/\b[A-Z][a-zA-Z]*\b/)) {_CR/_                    return &quot;keyword&quot;; // FileMaker functions in bold_CR/_                }_CR/_                stream.next();_CR/_                return null;_CR/_            }_CR/_        };_CR/_    });_CR/__CR/_    CodeMirror.defineMIME(&quot;text/x-filemaker&quot;, {_CR/_        name: &quot;filemaker&quot;_CR/_    });_CR/_});</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.82E4C1548AA922AFC9F6ECAC868ED315</StringID>
	<SourceText>Segment to run on client and launch psos instance of this script</SourceText>
	<TargetText>Segment to run on client and launch psos instance of this script</TargetText>
	<Comment>com.fmi.scriptstep.text.Segment to run on client and launch psos instance of this script</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.86E46BC7543E9A4084B80C10B33AD492</StringID>
	<SourceText>LAUNCH DATAVIEWER</SourceText>
	<TargetText>LAUNCH DATAVIEWER</TargetText>
	<Comment>com.fmi.scriptstep.text.LAUNCH DATAVIEWER</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.89D0CA2085E766D5FA2C839FEEC5D5E0</StringID>
	<SourceText>(function(mod) {<CR/>    if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) mod(require(&quot;../../lib/codemirror&quot;));<CR/>    else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) define([&quot;../../lib/codemirror&quot;], mod);<CR/>    else mod(CodeMirror);<CR/>})(function(CodeMirror) {<CR/>    &quot;use strict&quot;;<CR/><CR/>    // âœ… FileMaker function list<CR/>    var filemakerFunctions = [<CR/>        {&quot;shortcut&quot;:&quot;cha&quot;,&quot;text&quot;:&quot;Char ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cod&quot;,&quot;text&quot;:&quot;Code ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;exa&quot;,&quot;text&quot;:&quot;Exact ( originalText ; comparisonText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fil&quot;,&quot;text&quot;:&quot;Filter ( textToFilter ; filterText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fil&quot;,&quot;text&quot;:&quot;FilterValues ( textToFilter ; filterValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gacss&quot;,&quot;text&quot;:&quot;GetAsCSS ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsDate ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsNumber ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gasvg&quot;,&quot;text&quot;:&quot;GetAsSVG ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsText ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsTime ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsTimestamp ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaurle&quot;,&quot;text&quot;:&quot;GetAsURLEncoded ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetValue ( listOfValues ; valueNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;Left ( text ; numberOfCharacters )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;LeftValues ( text ; numberOfValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;LeftWords ( text ; numberOfWords )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;len&quot;,&quot;text&quot;:&quot;Length ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;low&quot;,&quot;text&quot;:&quot;Lower ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;Middle ( text ; start ; numberOfCharacters )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;MiddleValues ( text ; startingValue ; numberOfValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;MiddleWords ( text ; startingWord ; numberOfWords )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pat&quot;,&quot;text&quot;:&quot;PatternCount ( text ; searchString )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pos&quot;,&quot;text&quot;:&quot;Position ( text ; searchString ; start ; occurrence )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pro&quot;,&quot;text&quot;:&quot;Proper ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;quo&quot;,&quot;text&quot;:&quot;Quote ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rep&quot;,&quot;text&quot;:&quot;Replace ( text ; start ; numberOfCharacters ; replacementText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;Right ( text ; numberOfCharacters )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;RightValues ( text ; numberOfValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;RightWords ( text ; numberOfWords )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ser&quot;,&quot;text&quot;:&quot;SerialIncrement ( text ; incrementBy )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sor&quot;,&quot;text&quot;:&quot;SortValues ( values {; datatype ; locale } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sub&quot;,&quot;text&quot;:&quot;Substitute ( text ; searchString ; replaceString )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tri&quot;,&quot;text&quot;:&quot;Trim ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tri&quot;,&quot;text&quot;:&quot;TrimAll ( text ; trimSpaces ; trimType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;uni&quot;,&quot;text&quot;:&quot;UniqueValues ( values {; datatype ; locale } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;upp&quot;,&quot;text&quot;:&quot;Upper ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueCount ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;wor&quot;,&quot;text&quot;:&quot;WordCount ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rgb&quot;,&quot;text&quot;:&quot;RGB ( red ; green ; blue )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextColor ( text ; RGB ( red ; green ; blue ) )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextColorRemove ( text {; RGB  ( red ; green ; blue )} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFont ( text ; fontName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFontRemove ( text {; fontToRemove } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFormatRemove ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextSize ( text ; fontSize )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextSizeRemove ( text {; sizeToRemove } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextStyleAdd ( text ; styles )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextStyleRemove ( text ; styles )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;abs&quot;,&quot;text&quot;:&quot;Abs ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cei&quot;,&quot;text&quot;:&quot;Ceiling ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;com&quot;,&quot;text&quot;:&quot;Combination ( setSize ; numberOfChoices )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;div&quot;,&quot;text&quot;:&quot;Div ( number ; divisor )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;exp&quot;,&quot;text&quot;:&quot;Exp ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fac&quot;,&quot;text&quot;:&quot;Factorial ( number {; numberOfFactors} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;flo&quot;,&quot;text&quot;:&quot;Floor ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;int&quot;,&quot;text&quot;:&quot;Int ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lg&quot;,&quot;text&quot;:&quot;Lg ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ln&quot;,&quot;text&quot;:&quot;Ln ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;log&quot;,&quot;text&quot;:&quot;Log ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mod&quot;,&quot;text&quot;:&quot;Mod ( number ; divisor )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ran&quot;,&quot;text&quot;:&quot;Random&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rou&quot;,&quot;text&quot;:&quot;Round ( number ; precision )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;set&quot;,&quot;text&quot;:&quot;SetPrecision ( expression ; precision )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sig&quot;,&quot;text&quot;:&quot;Sign ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sqr&quot;,&quot;text&quot;:&quot;Sqrt ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tru&quot;,&quot;text&quot;:&quot;Truncate ( number ; precision )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;dat&quot;,&quot;text&quot;:&quot;Date ( month ; day ; year )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;Day ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayName ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayOfWeek ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayOfYear ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;Month ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;MonthName ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;wee&quot;,&quot;text&quot;:&quot;WeekOfYear ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;woyf&quot;,&quot;text&quot;:&quot;WeekOfYearFiscal ( date ; startingDay )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;yea&quot;,&quot;text&quot;:&quot;Year ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hou&quot;,&quot;text&quot;:&quot;Hour ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;min&quot;,&quot;text&quot;:&quot;Minute ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sec&quot;,&quot;text&quot;:&quot;Seconds ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tim&quot;,&quot;text&quot;:&quot;Time ( hours ; minutes ; seconds )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tim&quot;,&quot;text&quot;:&quot;Timestamp ( date ; time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;Base64Decode ( text {; fileNameWithExtension } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;Base64Encode ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;berfc&quot;,&quot;text&quot;:&quot;Base64EncodeRFC ( RFCNumber ; data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptAuthCode ( data ; algorithm ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDecrypt ( container ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDecryptBase64 ( text ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDigest ( data ; algorithm )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptEncrypt ( data ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptEncryptBase64 ( data ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptGenerateSignature ( data ; algorithm ; privateRSAKey ; keyPassword )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptVerifySignature ( data ; algorithm ; publicRSAKey ; signature )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetContainerAttribute ( field ; attributeName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetHeight ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetLiveText ( container ; language )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetThumbnail ( field ; width ; height )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetWidth ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hex&quot;,&quot;text&quot;:&quot;HexDecode ( data {; fileNameWithExtension } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hex&quot;,&quot;text&quot;:&quot;HexEncode ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rqrc&quot;,&quot;text&quot;:&quot;ReadQRCode ( container )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextDecode ( container ; encoding )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextEncode ( text ; encoding ; lineEndings )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ver&quot;,&quot;text&quot;:&quot;VerifyContainer ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayNameJ ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fur&quot;,&quot;text&quot;:&quot;Furigana ( text {; option } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hir&quot;,&quot;text&quot;:&quot;Hiragana ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanaHankaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanaZenkaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanjiNumeral ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kat&quot;,&quot;text&quot;:&quot;Katakana ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;MonthNameJ ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;num&quot;,&quot;text&quot;:&quot;NumToJText ( number ; separator ; characterType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rom&quot;,&quot;text&quot;:&quot;RomanHankaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rom&quot;,&quot;text&quot;:&quot;RomanZenkaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;yea&quot;,&quot;text&quot;:&quot;YearName ( date ; format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsode&quot;,&quot;text&quot;:&quot;JSONDeleteElement ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsofe&quot;,&quot;text&quot;:&quot;JSONFormatElements ( json )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsoge&quot;,&quot;text&quot;:&quot;JSONGetElement ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsoget&quot;,&quot;text&quot;:&quot;JSONGetElementType ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsolk&quot;,&quot;text&quot;:&quot;JSONListKeys ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsolv&quot;,&quot;text&quot;:&quot;JSONListValues ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsose&quot;,&quot;text&quot;:&quot;JSONSetElement ( json ; keyOrIndexOrPath ; value ; type )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ave&quot;,&quot;text&quot;:&quot;Average ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cou&quot;,&quot;text&quot;:&quot;Count ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lis&quot;,&quot;text&quot;:&quot;List ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;max&quot;,&quot;text&quot;:&quot;Max ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;min&quot;,&quot;text&quot;:&quot;Minute ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;std&quot;,&quot;text&quot;:&quot;StDev ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;std&quot;,&quot;text&quot;:&quot;StDevP ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sum&quot;,&quot;text&quot;:&quot;Sum ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;var&quot;,&quot;text&quot;:&quot;Variance ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;var&quot;,&quot;text&quot;:&quot;VarianceP ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ext&quot;,&quot;text&quot;:&quot;Extend ( non-repeatingField )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetRepetition ( repeatingField ; number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;las&quot;,&quot;text&quot;:&quot;Last ( repeatingField )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fv&quot;,&quot;text&quot;:&quot;FV ( payment ; interestRate ; periods )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;npv&quot;,&quot;text&quot;:&quot;NPV ( payment ; interestRate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pmt&quot;,&quot;text&quot;:&quot;PMT ( principal ; interestRate ; term )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pv&quot;,&quot;text&quot;:&quot;PV ( payment ; interestRate ; periods )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;aco&quot;,&quot;text&quot;:&quot;Acos ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;asi&quot;,&quot;text&quot;:&quot;Asin ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ata&quot;,&quot;text&quot;:&quot;Atan ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cos&quot;,&quot;text&quot;:&quot;Cos ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;deg&quot;,&quot;text&quot;:&quot;Degrees ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pi&quot;,&quot;text&quot;:&quot;Pi&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rad&quot;,&quot;text&quot;:&quot;Radians ( angleInDegrees )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sin&quot;,&quot;text&quot;:&quot;Sin ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tan&quot;,&quot;text&quot;:&quot;Tan ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cas&quot;,&quot;text&quot;:&quot;Case ( test1 ; result1 {; test2 ; result2 ; ... ; defaultResult} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cho&quot;,&quot;text&quot;:&quot;Choose ( test ; result0 {; result1 ; result2...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;eva&quot;,&quot;text&quot;:&quot;Evaluate ( expression {; [field1 ; field2 ;...]} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;eva&quot;,&quot;text&quot;:&quot;EvaluationError ( expression )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;esql&quot;,&quot;text&quot;:&quot;ExecuteSQL ( sqlQuery ; fieldSeparator ; rowSeparator { ; arguments... } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsBoolean ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetField ( fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetNthRecord ( field ; recordNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetSummary ( summaryField ; breakField )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;if&quot;,&quot;text&quot;:&quot;If ( test ; result1 {; result2} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ise&quot;,&quot;text&quot;:&quot;IsEmpty ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;isv&quot;,&quot;text&quot;:&quot;IsValid ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;isv&quot;,&quot;text&quot;:&quot;IsValidExpression ( expression )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;let&quot;,&quot;text&quot;:&quot;Let ( {[} var1 = expression1 {; var2 = expression2...]} ; calculation )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loo&quot;,&quot;text&quot;:&quot;Lookup ( sourceField {; failExpression} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loo&quot;,&quot;text&quot;:&quot;LookupNext ( sourceField ; lower/higherFlag )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sel&quot;,&quot;text&quot;:&quot;Self&quot;},<CR/>        {&quot;shortcut&quot;:&quot;set&quot;,&quot;text&quot;:&quot;SetRecursion ( expression ; maxIterations )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;whi&quot;,&quot;text&quot;:&quot;While ( [ initialVariable ] ; condition ; [ logic ] ; result )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;com&quot;,&quot;text&quot;:&quot;ComputeModel ( modelName ; name1 ; value1 {name2; value2;...nameN; valueN } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetModelAttributes ( modelName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cffmp&quot;,&quot;text&quot;:&quot;ConvertFromFileMakerPath ( filemakerPath ; format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ctfmp&quot;,&quot;text&quot;:&quot;ConvertToFileMakerPath ( standardPath ; format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAddonInfo ( addonID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetBaseTableName ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetFieldName ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gloa&quot;,&quot;text&quot;:&quot;GetLayoutObjectAttribute ( objectName ; attributeName {; repetitionNumber ; portalRowNumber} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glooi&quot;,&quot;text&quot;:&quot;GetLayoutObjectOwnerInfo ( objectID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;louuid&quot;,&quot;text&quot;:&quot;LayoutObjectUUID&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaep&quot;,&quot;text&quot;:&quot;Get ( AccountExtendedPrivileges )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountGroupName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaps&quot;,&quot;text&quot;:&quot;Get ( AccountPrivilegeSetName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gafc&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldContents )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaft&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldTableName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;galo&quot;,&quot;text&quot;:&quot;Get ( ActiveLayoutObjectName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gamk&quot;,&quot;text&quot;:&quot;Get ( ActiveModifierKeys )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gapr&quot;,&quot;text&quot;:&quot;Get ( ActivePortalRowNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveRecordNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveRepetitionNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gass&quot;,&quot;text&quot;:&quot;Get ( ActiveSelectionSize )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gass&quot;,&quot;text&quot;:&quot;Get ( ActiveSelectionStart )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaas&quot;,&quot;text&quot;:&quot;Get ( AllowAbortState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gafbs&quot;,&quot;text&quot;:&quot;Get ( AllowFormattingBarState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationArchitecture )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationLanguage )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationVersion )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CacheFileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcfp&quot;,&quot;text&quot;:&quot;Get ( CacheFilePath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CalculationRepetitionNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ConnectionAttributes )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ConnectionState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentDate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcep&quot;,&quot;text&quot;:&quot;Get ( CurrentExtendedPrivileges )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcht&quot;,&quot;text&quot;:&quot;Get ( CurrentHostTimestamp )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcps&quot;,&quot;text&quot;:&quot;Get ( CurrentPrivilegeSetName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentTime )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentTimestamp )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gctutcm&quot;,&quot;text&quot;:&quot;Get ( CurrentTimeUTCMicroseconds )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gctutcm&quot;,&quot;text&quot;:&quot;Get ( CurrentTimeUTCMilliseconds )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcms&quot;,&quot;text&quot;:&quot;Get ( CustomMenuSetName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( DesktopPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( Device )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( DocumentsPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gdpl&quot;,&quot;text&quot;:&quot;Get ( DocumentsPathListing )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( EncryptionState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gecs&quot;,&quot;text&quot;:&quot;Get ( ErrorCaptureState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gfle&quot;,&quot;text&quot;:&quot;Get ( FileLocaleElements )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gfmp&quot;,&quot;text&quot;:&quot;Get ( FileMakerPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FilePath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FileSize )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FoundCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ghcs&quot;,&quot;text&quot;:&quot;Get ( HighContrastState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ghav&quot;,&quot;text&quot;:&quot;Get ( HostApplicationVersion )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ghipa&quot;,&quot;text&quot;:&quot;Get ( HostIPAddress )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( HostName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gifmp&quot;,&quot;text&quot;:&quot;Get ( InstalledFMPlugins )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gifmpajso&quot;,&quot;text&quot;:&quot;Get ( InstalledFMPluginsAsJSON )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LastError )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gled&quot;,&quot;text&quot;:&quot;Get ( LastErrorDetail )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glel&quot;,&quot;text&quot;:&quot;Get ( LastErrorLocation )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glmc&quot;,&quot;text&quot;:&quot;Get ( LastMessageChoice )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutAccess )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutTableName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glvs&quot;,&quot;text&quot;:&quot;Get ( LayoutViewState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( MenubarState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ModifiedFields )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gmus&quot;,&quot;text&quot;:&quot;Get ( MultiUserState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( NetworkProtocol )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( NetworkType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;godfi&quot;,&quot;text&quot;:&quot;Get ( OpenDataFileInfo )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PageCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PageNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gpid&quot;,&quot;text&quot;:&quot;Get ( PersistentID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PreferencesPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PrinterName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gqft&quot;,&quot;text&quot;:&quot;Get ( QuickFindText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RecordAccess )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;grid&quot;,&quot;text&quot;:&quot;Get ( RecordID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;grmc&quot;,&quot;text&quot;:&quot;Get ( RecordModificationCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RecordNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;groc&quot;,&quot;text&quot;:&quot;Get ( RecordOpenCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gros&quot;,&quot;text&quot;:&quot;Get ( RecordOpenState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;grme&quot;,&quot;text&quot;:&quot;Get ( RegionMonitorEvents )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RequestCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gros&quot;,&quot;text&quot;:&quot;Get ( RequestOmitState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenDepth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gssf&quot;,&quot;text&quot;:&quot;Get ( ScreenScaleFactor )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsas&quot;,&quot;text&quot;:&quot;Get ( ScriptAnimationState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptParameter )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptResult )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SessionIdentifier )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SortState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsas&quot;,&quot;text&quot;:&quot;Get ( StatusAreaState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemAppearance )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemDrive )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsipa&quot;,&quot;text&quot;:&quot;Get ( SystemIPAddress )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemLanguage )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsle&quot;,&quot;text&quot;:&quot;Get ( SystemLocaleElements )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsica&quot;,&quot;text&quot;:&quot;Get ( SystemNICAddress )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemPlatform )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemVersion )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( TemporaryPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtrv&quot;,&quot;text&quot;:&quot;Get ( TextRulerVisible )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtrc&quot;,&quot;text&quot;:&quot;Get ( TotalRecordCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtks&quot;,&quot;text&quot;:&quot;Get ( TouchKeyboardState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtos&quot;,&quot;text&quot;:&quot;Get ( TransactionOpenState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtcp&quot;,&quot;text&quot;:&quot;Get ( TriggerCurrentPanel )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtee&quot;,&quot;text&quot;:&quot;Get ( TriggerExternalEvent )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtgi&quot;,&quot;text&quot;:&quot;Get ( TriggerGestureInfo )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( TriggerKeystroke )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtmk&quot;,&quot;text&quot;:&quot;Get ( TriggerModifierKeys )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gttp&quot;,&quot;text&quot;:&quot;Get ( TriggerTargetPanel )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( UserCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( UserName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gusfs&quot;,&quot;text&quot;:&quot;Get ( UseSystemFormatsState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;guuid&quot;,&quot;text&quot;:&quot;Get ( UUID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;guuid&quot;,&quot;text&quot;:&quot;Get ( UUIDNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwch&quot;,&quot;text&quot;:&quot;Get ( WindowContentHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwcw&quot;,&quot;text&quot;:&quot;Get ( WindowContentWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwdh&quot;,&quot;text&quot;:&quot;Get ( WindowDesktopHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwdw&quot;,&quot;text&quot;:&quot;Get ( WindowDesktopWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowLeft )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowMode )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowOrientation )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowStyle )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowTop )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowVisible )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwzl&quot;,&quot;text&quot;:&quot;Get ( WindowZoomLevel )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;btid&quot;,&quot;text&quot;:&quot;BaseTableIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;BaseTableNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;dat&quot;,&quot;text&quot;:&quot;DatabaseNames&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldBounds ( fileName ; layoutName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldComment ( fileName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldIDs ( fileName ; layoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldNames ( fileName ; layoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldRepetitions ( fileName ; layoutName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldStyle ( fileName ; layoutName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldType ( fileName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetNextSerialValue ( fileName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutObjectNames ( fileName ; layoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rel&quot;,&quot;text&quot;:&quot;RelationInfo ( fileName ; tableName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;scr&quot;,&quot;text&quot;:&quot;ScriptIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;scr&quot;,&quot;text&quot;:&quot;ScriptNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tab&quot;,&quot;text&quot;:&quot;TableIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tab&quot;,&quot;text&quot;:&quot;TableNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;vlid&quot;,&quot;text&quot;:&quot;ValueListIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueListItems ( fileName ; valueList )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueListNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;win&quot;,&quot;text&quot;:&quot;WindowNames {( fileName )}&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gavpa&quot;,&quot;text&quot;:&quot;GetAVPlayerAttribute ( attributeName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetSensor ( sensorName {; option1 ; option2 } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loc&quot;,&quot;text&quot;:&quot;Location ( accuracy {; timeout} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loc&quot;,&quot;text&quot;:&quot;LocationValues ( accuracy {; timeout} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ran&quot;,&quot;text&quot;:&quot;RangeBeacons ( UUID {; timeout; major; minor} )&quot;},<CR/>        <CR/>        // Standardised Comments<CR/>    <CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Dialog&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Launch Actions&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Targets&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Footer Action Button #&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// List Action Button #&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Operation Targets&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Optional&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Picker Selections&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Populate Card Fields&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Scripts running after card opens&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Scripts running before card opens&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Virtual List&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Virtual List Creation&quot;},<CR/>    <CR/>        // Custom Functions<CR/>        <CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;WritePass ( pass )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ReadPass ( pass )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.GetValuesAtPath ( array ; path )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ScriptNameCamelCase&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ErrorDescription ( errorNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetPermutations ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;HonkIndex ( values )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FullTableSQLasJSON ( tablename ; condition )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;SQLasJSON ( tablename ; fields ; condition )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;NumberFormat ( Number ; DecimalPrecision ; ThousandSeparator )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;SetGlobalVar ( Name ; Value )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FilteredPortalList ( fieldObjectName ; startingPortalRow )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;AntiFilterValues ( ListA ; ListB )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;TrimCR ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getFieldInContext ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getWindowGlobalVar&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.recordState&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPath&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.extendPath ( key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.extendUserPath ( key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setFieldNameInContext ( fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getFieldValueInContext ( fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleValue ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleSelectedKeys&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleSelectedValues&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getModule&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModule&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getUserKey&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPrimaryKey ( instance )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPayload ( payloadID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setSubModuleDAPIRead ( layouts ; response ; limit ; offset )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.jsonArrayObjectWrapValues ( type ; valueList )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.jsonArrayObjectAppendValues ( type ; newValues ; array ; path )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setErrorLog ( severity ; notify )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ContainerAttributesAsJSON ( container ; attributeName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FormattedBytes ( Bytes ; Rounding ; bitsOrBytes ; DecimalOrBinaryIEC )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetFileSize ( Bytes ; Precision ; UOM ; Format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CalendarBOX ( m ; y )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ReturnDate ( m ; y ; Cell )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetScriptParameter ( Number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ShowEnd ( xDate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ShowMid ( xDate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getLine ( value ; List1 )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.eSQL ( field ; modifier ; table ; join ; condition ; group ; order )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.MakeArrayObject ( ValueList ; Separator )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;fmLocalCSSEditor&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CheckReservedSQL ( keyword )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CheckReservedSQLforLayout ( layout )&quot;}<CR/><CR/>    ];<CR/><CR/>    function normalizeInput(str) {<CR/>        return str.trim().toLowerCase();<CR/>    }<CR/><CR/>    function filterSuggestions(query) {<CR/>        query = normalizeInput(query);<CR/>        return filemakerFunctions.filter(fn =&gt; normalizeInput(fn.text).startsWith(query));<CR/>    }<CR/><CR/>    // âœ… Register hint helper<CR/>    CodeMirror.registerHelper(&quot;hint&quot;, &quot;filemaker&quot;, function(editor) {<CR/>        let cur = editor.getCursor();<CR/>        let token = editor.getTokenAt(cur);<CR/>        let word = token.string.trim();<CR/>        let start = token.start, end = token.end;<CR/><CR/>        console.log(&quot;ðŸ›  FileMaker Autocomplete Triggered: &quot;, word);<CR/><CR/>        if (!word) return null; // No input, no suggestions<CR/><CR/>        let suggestions = filterSuggestions(word);<CR/><CR/>        console.log(&quot;ðŸ“Œ Suggestions:&quot;, suggestions);<CR/><CR/>        return {<CR/>            list: suggestions.map(fn =&gt; ({<CR/>                text: formatStackedFunction(fn.text),<CR/>                displayText: fn.text,<CR/>                description: fn.description,<CR/>                render: function(el, self, data) {<CR/>                    // âœ… Clear previous content<CR/>                    el.innerHTML = &quot;&quot;;<CR/><CR/>                    // âœ… Create function name span (bold)<CR/>                    let functionName = document.createElement(&quot;span&quot;);<CR/>                    functionName.textContent = data.displayText;<CR/>                    functionName.style.fontWeight = &quot;normal&quot;;<CR/><CR/>                    // âœ… Create description span (grey italics)<CR/>                    let functionDescription = document.createElement(&quot;span&quot;);<CR/>                    functionDescription.textContent = &quot; - &quot; + data.description;<CR/>                    functionDescription.style.color = &quot;#BBB&quot;;<CR/>                    functionDescription.style.fontStyle = &quot;italic&quot;;<CR/>                    functionDescription.style.paddingLeft = &quot;8px&quot;;<CR/><CR/>                    // âœ… Append both elements<CR/>                    el.appendChild(functionName);<CR/>                    el.appendChild(functionDescription);<CR/>                }<CR/>            })),<CR/>            from: CodeMirror.Pos(cur.line, start),<CR/>            to: CodeMirror.Pos(cur.line, end)<CR/>        };<CR/>    });<CR/><CR/>    // âœ… Format function calls in stacked format<CR/>    function formatStackedFunction(functionText) {<CR/>        let name = functionText.split(&quot; (&quot;)[0];<CR/>        let params = functionText.match(/\((.*)\)/);<CR/>        if (!params) return functionText; // Return as is if no parameters<CR/><CR/>        let paramList = params[1].split(&quot; ; &quot;).map(param =&gt; `    ${param}`).join(&quot; ;\n&quot;);<CR/>        return `${name} (\n${paramList}\n)`;<CR/>    }<CR/>});</SourceText>
	<TargetText>(function(mod) {<CR/>    if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) mod(require(&quot;../../lib/codemirror&quot;));<CR/>    else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) define([&quot;../../lib/codemirror&quot;], mod);<CR/>    else mod(CodeMirror);<CR/>})(function(CodeMirror) {<CR/>    &quot;use strict&quot;;<CR/><CR/>    // âœ… FileMaker function list<CR/>    var filemakerFunctions = [<CR/>        {&quot;shortcut&quot;:&quot;cha&quot;,&quot;text&quot;:&quot;Char ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cod&quot;,&quot;text&quot;:&quot;Code ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;exa&quot;,&quot;text&quot;:&quot;Exact ( originalText ; comparisonText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fil&quot;,&quot;text&quot;:&quot;Filter ( textToFilter ; filterText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fil&quot;,&quot;text&quot;:&quot;FilterValues ( textToFilter ; filterValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gacss&quot;,&quot;text&quot;:&quot;GetAsCSS ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsDate ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsNumber ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gasvg&quot;,&quot;text&quot;:&quot;GetAsSVG ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsText ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsTime ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsTimestamp ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaurle&quot;,&quot;text&quot;:&quot;GetAsURLEncoded ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetValue ( listOfValues ; valueNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;Left ( text ; numberOfCharacters )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;LeftValues ( text ; numberOfValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;LeftWords ( text ; numberOfWords )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;len&quot;,&quot;text&quot;:&quot;Length ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;low&quot;,&quot;text&quot;:&quot;Lower ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;Middle ( text ; start ; numberOfCharacters )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;MiddleValues ( text ; startingValue ; numberOfValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;MiddleWords ( text ; startingWord ; numberOfWords )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pat&quot;,&quot;text&quot;:&quot;PatternCount ( text ; searchString )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pos&quot;,&quot;text&quot;:&quot;Position ( text ; searchString ; start ; occurrence )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pro&quot;,&quot;text&quot;:&quot;Proper ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;quo&quot;,&quot;text&quot;:&quot;Quote ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rep&quot;,&quot;text&quot;:&quot;Replace ( text ; start ; numberOfCharacters ; replacementText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;Right ( text ; numberOfCharacters )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;RightValues ( text ; numberOfValues )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;RightWords ( text ; numberOfWords )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ser&quot;,&quot;text&quot;:&quot;SerialIncrement ( text ; incrementBy )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sor&quot;,&quot;text&quot;:&quot;SortValues ( values {; datatype ; locale } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sub&quot;,&quot;text&quot;:&quot;Substitute ( text ; searchString ; replaceString )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tri&quot;,&quot;text&quot;:&quot;Trim ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tri&quot;,&quot;text&quot;:&quot;TrimAll ( text ; trimSpaces ; trimType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;uni&quot;,&quot;text&quot;:&quot;UniqueValues ( values {; datatype ; locale } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;upp&quot;,&quot;text&quot;:&quot;Upper ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueCount ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;wor&quot;,&quot;text&quot;:&quot;WordCount ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rgb&quot;,&quot;text&quot;:&quot;RGB ( red ; green ; blue )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextColor ( text ; RGB ( red ; green ; blue ) )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextColorRemove ( text {; RGB  ( red ; green ; blue )} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFont ( text ; fontName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFontRemove ( text {; fontToRemove } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFormatRemove ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextSize ( text ; fontSize )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextSizeRemove ( text {; sizeToRemove } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextStyleAdd ( text ; styles )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextStyleRemove ( text ; styles )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;abs&quot;,&quot;text&quot;:&quot;Abs ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cei&quot;,&quot;text&quot;:&quot;Ceiling ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;com&quot;,&quot;text&quot;:&quot;Combination ( setSize ; numberOfChoices )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;div&quot;,&quot;text&quot;:&quot;Div ( number ; divisor )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;exp&quot;,&quot;text&quot;:&quot;Exp ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fac&quot;,&quot;text&quot;:&quot;Factorial ( number {; numberOfFactors} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;flo&quot;,&quot;text&quot;:&quot;Floor ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;int&quot;,&quot;text&quot;:&quot;Int ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lg&quot;,&quot;text&quot;:&quot;Lg ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ln&quot;,&quot;text&quot;:&quot;Ln ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;log&quot;,&quot;text&quot;:&quot;Log ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mod&quot;,&quot;text&quot;:&quot;Mod ( number ; divisor )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ran&quot;,&quot;text&quot;:&quot;Random&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rou&quot;,&quot;text&quot;:&quot;Round ( number ; precision )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;set&quot;,&quot;text&quot;:&quot;SetPrecision ( expression ; precision )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sig&quot;,&quot;text&quot;:&quot;Sign ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sqr&quot;,&quot;text&quot;:&quot;Sqrt ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tru&quot;,&quot;text&quot;:&quot;Truncate ( number ; precision )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;dat&quot;,&quot;text&quot;:&quot;Date ( month ; day ; year )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;Day ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayName ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayOfWeek ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayOfYear ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;Month ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;MonthName ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;wee&quot;,&quot;text&quot;:&quot;WeekOfYear ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;woyf&quot;,&quot;text&quot;:&quot;WeekOfYearFiscal ( date ; startingDay )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;yea&quot;,&quot;text&quot;:&quot;Year ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hou&quot;,&quot;text&quot;:&quot;Hour ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;min&quot;,&quot;text&quot;:&quot;Minute ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sec&quot;,&quot;text&quot;:&quot;Seconds ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tim&quot;,&quot;text&quot;:&quot;Time ( hours ; minutes ; seconds )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tim&quot;,&quot;text&quot;:&quot;Timestamp ( date ; time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;Base64Decode ( text {; fileNameWithExtension } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;Base64Encode ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;berfc&quot;,&quot;text&quot;:&quot;Base64EncodeRFC ( RFCNumber ; data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptAuthCode ( data ; algorithm ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDecrypt ( container ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDecryptBase64 ( text ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDigest ( data ; algorithm )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptEncrypt ( data ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptEncryptBase64 ( data ; key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptGenerateSignature ( data ; algorithm ; privateRSAKey ; keyPassword )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptVerifySignature ( data ; algorithm ; publicRSAKey ; signature )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetContainerAttribute ( field ; attributeName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetHeight ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetLiveText ( container ; language )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetThumbnail ( field ; width ; height )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetWidth ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hex&quot;,&quot;text&quot;:&quot;HexDecode ( data {; fileNameWithExtension } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hex&quot;,&quot;text&quot;:&quot;HexEncode ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rqrc&quot;,&quot;text&quot;:&quot;ReadQRCode ( container )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextDecode ( container ; encoding )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextEncode ( text ; encoding ; lineEndings )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ver&quot;,&quot;text&quot;:&quot;VerifyContainer ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayNameJ ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fur&quot;,&quot;text&quot;:&quot;Furigana ( text {; option } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;hir&quot;,&quot;text&quot;:&quot;Hiragana ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanaHankaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanaZenkaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanjiNumeral ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;kat&quot;,&quot;text&quot;:&quot;Katakana ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;MonthNameJ ( date )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;num&quot;,&quot;text&quot;:&quot;NumToJText ( number ; separator ; characterType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rom&quot;,&quot;text&quot;:&quot;RomanHankaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rom&quot;,&quot;text&quot;:&quot;RomanZenkaku ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;yea&quot;,&quot;text&quot;:&quot;YearName ( date ; format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsode&quot;,&quot;text&quot;:&quot;JSONDeleteElement ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsofe&quot;,&quot;text&quot;:&quot;JSONFormatElements ( json )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsoge&quot;,&quot;text&quot;:&quot;JSONGetElement ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsoget&quot;,&quot;text&quot;:&quot;JSONGetElementType ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsolk&quot;,&quot;text&quot;:&quot;JSONListKeys ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsolv&quot;,&quot;text&quot;:&quot;JSONListValues ( json ; keyOrIndexOrPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;jsose&quot;,&quot;text&quot;:&quot;JSONSetElement ( json ; keyOrIndexOrPath ; value ; type )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ave&quot;,&quot;text&quot;:&quot;Average ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cou&quot;,&quot;text&quot;:&quot;Count ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lis&quot;,&quot;text&quot;:&quot;List ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;max&quot;,&quot;text&quot;:&quot;Max ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;min&quot;,&quot;text&quot;:&quot;Minute ( time )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;std&quot;,&quot;text&quot;:&quot;StDev ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;std&quot;,&quot;text&quot;:&quot;StDevP ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sum&quot;,&quot;text&quot;:&quot;Sum ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;var&quot;,&quot;text&quot;:&quot;Variance ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;var&quot;,&quot;text&quot;:&quot;VarianceP ( field {; field...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ext&quot;,&quot;text&quot;:&quot;Extend ( non-repeatingField )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetRepetition ( repeatingField ; number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;las&quot;,&quot;text&quot;:&quot;Last ( repeatingField )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fv&quot;,&quot;text&quot;:&quot;FV ( payment ; interestRate ; periods )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;npv&quot;,&quot;text&quot;:&quot;NPV ( payment ; interestRate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pmt&quot;,&quot;text&quot;:&quot;PMT ( principal ; interestRate ; term )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pv&quot;,&quot;text&quot;:&quot;PV ( payment ; interestRate ; periods )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;aco&quot;,&quot;text&quot;:&quot;Acos ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;asi&quot;,&quot;text&quot;:&quot;Asin ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ata&quot;,&quot;text&quot;:&quot;Atan ( number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cos&quot;,&quot;text&quot;:&quot;Cos ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;deg&quot;,&quot;text&quot;:&quot;Degrees ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;pi&quot;,&quot;text&quot;:&quot;Pi&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rad&quot;,&quot;text&quot;:&quot;Radians ( angleInDegrees )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sin&quot;,&quot;text&quot;:&quot;Sin ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tan&quot;,&quot;text&quot;:&quot;Tan ( angleInRadians )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cas&quot;,&quot;text&quot;:&quot;Case ( test1 ; result1 {; test2 ; result2 ; ... ; defaultResult} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cho&quot;,&quot;text&quot;:&quot;Choose ( test ; result0 {; result1 ; result2...} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;eva&quot;,&quot;text&quot;:&quot;Evaluate ( expression {; [field1 ; field2 ;...]} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;eva&quot;,&quot;text&quot;:&quot;EvaluationError ( expression )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;esql&quot;,&quot;text&quot;:&quot;ExecuteSQL ( sqlQuery ; fieldSeparator ; rowSeparator { ; arguments... } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsBoolean ( data )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetField ( fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetNthRecord ( field ; recordNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetSummary ( summaryField ; breakField )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;if&quot;,&quot;text&quot;:&quot;If ( test ; result1 {; result2} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ise&quot;,&quot;text&quot;:&quot;IsEmpty ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;isv&quot;,&quot;text&quot;:&quot;IsValid ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;isv&quot;,&quot;text&quot;:&quot;IsValidExpression ( expression )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;let&quot;,&quot;text&quot;:&quot;Let ( {[} var1 = expression1 {; var2 = expression2...]} ; calculation )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loo&quot;,&quot;text&quot;:&quot;Lookup ( sourceField {; failExpression} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loo&quot;,&quot;text&quot;:&quot;LookupNext ( sourceField ; lower/higherFlag )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;sel&quot;,&quot;text&quot;:&quot;Self&quot;},<CR/>        {&quot;shortcut&quot;:&quot;set&quot;,&quot;text&quot;:&quot;SetRecursion ( expression ; maxIterations )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;whi&quot;,&quot;text&quot;:&quot;While ( [ initialVariable ] ; condition ; [ logic ] ; result )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;com&quot;,&quot;text&quot;:&quot;ComputeModel ( modelName ; name1 ; value1 {name2; value2;...nameN; valueN } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetModelAttributes ( modelName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;cffmp&quot;,&quot;text&quot;:&quot;ConvertFromFileMakerPath ( filemakerPath ; format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ctfmp&quot;,&quot;text&quot;:&quot;ConvertToFileMakerPath ( standardPath ; format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAddonInfo ( addonID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetBaseTableName ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetFieldName ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gloa&quot;,&quot;text&quot;:&quot;GetLayoutObjectAttribute ( objectName ; attributeName {; repetitionNumber ; portalRowNumber} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glooi&quot;,&quot;text&quot;:&quot;GetLayoutObjectOwnerInfo ( objectID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;louuid&quot;,&quot;text&quot;:&quot;LayoutObjectUUID&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaep&quot;,&quot;text&quot;:&quot;Get ( AccountExtendedPrivileges )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountGroupName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaps&quot;,&quot;text&quot;:&quot;Get ( AccountPrivilegeSetName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gafc&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldContents )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaft&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldTableName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;galo&quot;,&quot;text&quot;:&quot;Get ( ActiveLayoutObjectName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gamk&quot;,&quot;text&quot;:&quot;Get ( ActiveModifierKeys )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gapr&quot;,&quot;text&quot;:&quot;Get ( ActivePortalRowNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveRecordNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveRepetitionNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gass&quot;,&quot;text&quot;:&quot;Get ( ActiveSelectionSize )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gass&quot;,&quot;text&quot;:&quot;Get ( ActiveSelectionStart )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gaas&quot;,&quot;text&quot;:&quot;Get ( AllowAbortState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gafbs&quot;,&quot;text&quot;:&quot;Get ( AllowFormattingBarState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationArchitecture )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationLanguage )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationVersion )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CacheFileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcfp&quot;,&quot;text&quot;:&quot;Get ( CacheFilePath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CalculationRepetitionNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ConnectionAttributes )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ConnectionState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentDate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcep&quot;,&quot;text&quot;:&quot;Get ( CurrentExtendedPrivileges )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcht&quot;,&quot;text&quot;:&quot;Get ( CurrentHostTimestamp )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcps&quot;,&quot;text&quot;:&quot;Get ( CurrentPrivilegeSetName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentTime )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentTimestamp )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gctutcm&quot;,&quot;text&quot;:&quot;Get ( CurrentTimeUTCMicroseconds )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gctutcm&quot;,&quot;text&quot;:&quot;Get ( CurrentTimeUTCMilliseconds )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gcms&quot;,&quot;text&quot;:&quot;Get ( CustomMenuSetName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( DesktopPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( Device )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( DocumentsPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gdpl&quot;,&quot;text&quot;:&quot;Get ( DocumentsPathListing )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( EncryptionState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gecs&quot;,&quot;text&quot;:&quot;Get ( ErrorCaptureState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gfle&quot;,&quot;text&quot;:&quot;Get ( FileLocaleElements )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gfmp&quot;,&quot;text&quot;:&quot;Get ( FileMakerPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FilePath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FileSize )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FoundCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ghcs&quot;,&quot;text&quot;:&quot;Get ( HighContrastState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ghav&quot;,&quot;text&quot;:&quot;Get ( HostApplicationVersion )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ghipa&quot;,&quot;text&quot;:&quot;Get ( HostIPAddress )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( HostName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gifmp&quot;,&quot;text&quot;:&quot;Get ( InstalledFMPlugins )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gifmpajso&quot;,&quot;text&quot;:&quot;Get ( InstalledFMPluginsAsJSON )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LastError )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gled&quot;,&quot;text&quot;:&quot;Get ( LastErrorDetail )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glel&quot;,&quot;text&quot;:&quot;Get ( LastErrorLocation )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glmc&quot;,&quot;text&quot;:&quot;Get ( LastMessageChoice )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutAccess )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutTableName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;glvs&quot;,&quot;text&quot;:&quot;Get ( LayoutViewState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( MenubarState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ModifiedFields )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gmus&quot;,&quot;text&quot;:&quot;Get ( MultiUserState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( NetworkProtocol )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( NetworkType )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;godfi&quot;,&quot;text&quot;:&quot;Get ( OpenDataFileInfo )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PageCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PageNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gpid&quot;,&quot;text&quot;:&quot;Get ( PersistentID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PreferencesPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PrinterName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gqft&quot;,&quot;text&quot;:&quot;Get ( QuickFindText )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RecordAccess )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;grid&quot;,&quot;text&quot;:&quot;Get ( RecordID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;grmc&quot;,&quot;text&quot;:&quot;Get ( RecordModificationCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RecordNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;groc&quot;,&quot;text&quot;:&quot;Get ( RecordOpenCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gros&quot;,&quot;text&quot;:&quot;Get ( RecordOpenState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;grme&quot;,&quot;text&quot;:&quot;Get ( RegionMonitorEvents )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RequestCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gros&quot;,&quot;text&quot;:&quot;Get ( RequestOmitState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenDepth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gssf&quot;,&quot;text&quot;:&quot;Get ( ScreenScaleFactor )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsas&quot;,&quot;text&quot;:&quot;Get ( ScriptAnimationState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptParameter )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptResult )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SessionIdentifier )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SortState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsas&quot;,&quot;text&quot;:&quot;Get ( StatusAreaState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemAppearance )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemDrive )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsipa&quot;,&quot;text&quot;:&quot;Get ( SystemIPAddress )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemLanguage )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsle&quot;,&quot;text&quot;:&quot;Get ( SystemLocaleElements )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gsica&quot;,&quot;text&quot;:&quot;Get ( SystemNICAddress )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemPlatform )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemVersion )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( TemporaryPath )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtrv&quot;,&quot;text&quot;:&quot;Get ( TextRulerVisible )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtrc&quot;,&quot;text&quot;:&quot;Get ( TotalRecordCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtks&quot;,&quot;text&quot;:&quot;Get ( TouchKeyboardState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtos&quot;,&quot;text&quot;:&quot;Get ( TransactionOpenState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtcp&quot;,&quot;text&quot;:&quot;Get ( TriggerCurrentPanel )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtee&quot;,&quot;text&quot;:&quot;Get ( TriggerExternalEvent )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtgi&quot;,&quot;text&quot;:&quot;Get ( TriggerGestureInfo )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( TriggerKeystroke )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gtmk&quot;,&quot;text&quot;:&quot;Get ( TriggerModifierKeys )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gttp&quot;,&quot;text&quot;:&quot;Get ( TriggerTargetPanel )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( UserCount )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( UserName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gusfs&quot;,&quot;text&quot;:&quot;Get ( UseSystemFormatsState )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;guuid&quot;,&quot;text&quot;:&quot;Get ( UUID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;guuid&quot;,&quot;text&quot;:&quot;Get ( UUIDNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwch&quot;,&quot;text&quot;:&quot;Get ( WindowContentHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwcw&quot;,&quot;text&quot;:&quot;Get ( WindowContentWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwdh&quot;,&quot;text&quot;:&quot;Get ( WindowDesktopHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwdw&quot;,&quot;text&quot;:&quot;Get ( WindowDesktopWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowHeight )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowLeft )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowMode )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowOrientation )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowStyle )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowTop )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowVisible )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowWidth )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gwzl&quot;,&quot;text&quot;:&quot;Get ( WindowZoomLevel )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;btid&quot;,&quot;text&quot;:&quot;BaseTableIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;BaseTableNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;dat&quot;,&quot;text&quot;:&quot;DatabaseNames&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldBounds ( fileName ; layoutName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldComment ( fileName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldIDs ( fileName ; layoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldNames ( fileName ; layoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldRepetitions ( fileName ; layoutName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldStyle ( fileName ; layoutName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldType ( fileName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetNextSerialValue ( fileName ; fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutObjectNames ( fileName ; layoutName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;rel&quot;,&quot;text&quot;:&quot;RelationInfo ( fileName ; tableName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;scr&quot;,&quot;text&quot;:&quot;ScriptIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;scr&quot;,&quot;text&quot;:&quot;ScriptNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tab&quot;,&quot;text&quot;:&quot;TableIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;tab&quot;,&quot;text&quot;:&quot;TableNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;vlid&quot;,&quot;text&quot;:&quot;ValueListIDs ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueListItems ( fileName ; valueList )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueListNames ( fileName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;win&quot;,&quot;text&quot;:&quot;WindowNames {( fileName )}&quot;},<CR/>        {&quot;shortcut&quot;:&quot;gavpa&quot;,&quot;text&quot;:&quot;GetAVPlayerAttribute ( attributeName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetSensor ( sensorName {; option1 ; option2 } )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loc&quot;,&quot;text&quot;:&quot;Location ( accuracy {; timeout} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;loc&quot;,&quot;text&quot;:&quot;LocationValues ( accuracy {; timeout} )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;ran&quot;,&quot;text&quot;:&quot;RangeBeacons ( UUID {; timeout; major; minor} )&quot;},<CR/>        <CR/>        // Standardised Comments<CR/>    <CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Dialog&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Launch Actions&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Targets&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Footer Action Button #&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// List Action Button #&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Operation Targets&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Optional&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Picker Selections&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Populate Card Fields&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Scripts running after card opens&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Scripts running before card opens&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Virtual List&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Virtual List Creation&quot;},<CR/>    <CR/>        // Custom Functions<CR/>        <CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;WritePass ( pass )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ReadPass ( pass )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.GetValuesAtPath ( array ; path )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ScriptNameCamelCase&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ErrorDescription ( errorNumber )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetPermutations ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;HonkIndex ( values )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FullTableSQLasJSON ( tablename ; condition )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;SQLasJSON ( tablename ; fields ; condition )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;NumberFormat ( Number ; DecimalPrecision ; ThousandSeparator )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;SetGlobalVar ( Name ; Value )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FilteredPortalList ( fieldObjectName ; startingPortalRow )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;AntiFilterValues ( ListA ; ListB )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;TrimCR ( text )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getFieldInContext ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getWindowGlobalVar&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.recordState&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPath&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.extendPath ( key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.extendUserPath ( key )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setFieldNameInContext ( fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getFieldValueInContext ( fieldName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleValue ( field )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleSelectedKeys&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleSelectedValues&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getModule&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModule&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getUserKey&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPrimaryKey ( instance )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPayload ( payloadID )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setSubModuleDAPIRead ( layouts ; response ; limit ; offset )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.jsonArrayObjectWrapValues ( type ; valueList )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.jsonArrayObjectAppendValues ( type ; newValues ; array ; path )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setErrorLog ( severity ; notify )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ContainerAttributesAsJSON ( container ; attributeName )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FormattedBytes ( Bytes ; Rounding ; bitsOrBytes ; DecimalOrBinaryIEC )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetFileSize ( Bytes ; Precision ; UOM ; Format )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CalendarBOX ( m ; y )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ReturnDate ( m ; y ; Cell )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetScriptParameter ( Number )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ShowEnd ( xDate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ShowMid ( xDate )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getLine ( value ; List1 )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.eSQL ( field ; modifier ; table ; join ; condition ; group ; order )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.MakeArrayObject ( ValueList ; Separator )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;fmLocalCSSEditor&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CheckReservedSQL ( keyword )&quot;},<CR/>        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CheckReservedSQLforLayout ( layout )&quot;}<CR/><CR/>    ];<CR/><CR/>    function normalizeInput(str) {<CR/>        return str.trim().toLowerCase();<CR/>    }<CR/><CR/>    function filterSuggestions(query) {<CR/>        query = normalizeInput(query);<CR/>        return filemakerFunctions.filter(fn =&gt; normalizeInput(fn.text).startsWith(query));<CR/>    }<CR/><CR/>    // âœ… Register hint helper<CR/>    CodeMirror.registerHelper(&quot;hint&quot;, &quot;filemaker&quot;, function(editor) {<CR/>        let cur = editor.getCursor();<CR/>        let token = editor.getTokenAt(cur);<CR/>        let word = token.string.trim();<CR/>        let start = token.start, end = token.end;<CR/><CR/>        console.log(&quot;ðŸ›  FileMaker Autocomplete Triggered: &quot;, word);<CR/><CR/>        if (!word) return null; // No input, no suggestions<CR/><CR/>        let suggestions = filterSuggestions(word);<CR/><CR/>        console.log(&quot;ðŸ“Œ Suggestions:&quot;, suggestions);<CR/><CR/>        return {<CR/>            list: suggestions.map(fn =&gt; ({<CR/>                text: formatStackedFunction(fn.text),<CR/>                displayText: fn.text,<CR/>                description: fn.description,<CR/>                render: function(el, self, data) {<CR/>                    // âœ… Clear previous content<CR/>                    el.innerHTML = &quot;&quot;;<CR/><CR/>                    // âœ… Create function name span (bold)<CR/>                    let functionName = document.createElement(&quot;span&quot;);<CR/>                    functionName.textContent = data.displayText;<CR/>                    functionName.style.fontWeight = &quot;normal&quot;;<CR/><CR/>                    // âœ… Create description span (grey italics)<CR/>                    let functionDescription = document.createElement(&quot;span&quot;);<CR/>                    functionDescription.textContent = &quot; - &quot; + data.description;<CR/>                    functionDescription.style.color = &quot;#BBB&quot;;<CR/>                    functionDescription.style.fontStyle = &quot;italic&quot;;<CR/>                    functionDescription.style.paddingLeft = &quot;8px&quot;;<CR/><CR/>                    // âœ… Append both elements<CR/>                    el.appendChild(functionName);<CR/>                    el.appendChild(functionDescription);<CR/>                }<CR/>            })),<CR/>            from: CodeMirror.Pos(cur.line, start),<CR/>            to: CodeMirror.Pos(cur.line, end)<CR/>        };<CR/>    });<CR/><CR/>    // âœ… Format function calls in stacked format<CR/>    function formatStackedFunction(functionText) {<CR/>        let name = functionText.split(&quot; (&quot;)[0];<CR/>        let params = functionText.match(/\((.*)\)/);<CR/>        if (!params) return functionText; // Return as is if no parameters<CR/><CR/>        let paramList = params[1].split(&quot; ; &quot;).map(param =&gt; `    ${param}`).join(&quot; ;\n&quot;);<CR/>        return `${name} (\n${paramList}\n)`;<CR/>    }<CR/>});</TargetText>
	<Comment>com.fmi.scriptstep.text.(function(mod) {_CR/_    if (typeof exports == &quot;object&quot; &amp;&amp; typeof module == &quot;object&quot;) mod(require(&quot;../../lib/codemirror&quot;));_CR/_    else if (typeof define == &quot;function&quot; &amp;&amp; define.amd) define([&quot;../../lib/codemirror&quot;], mod);_CR/_    else mod(CodeMirror);_CR/_})(function(CodeMirror) {_CR/_    &quot;use strict&quot;;_CR/__CR/_    // âœ… FileMaker function list_CR/_    var filemakerFunctions = [_CR/_        {&quot;shortcut&quot;:&quot;cha&quot;,&quot;text&quot;:&quot;Char ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cod&quot;,&quot;text&quot;:&quot;Code ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;exa&quot;,&quot;text&quot;:&quot;Exact ( originalText ; comparisonText )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fil&quot;,&quot;text&quot;:&quot;Filter ( textToFilter ; filterText )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fil&quot;,&quot;text&quot;:&quot;FilterValues ( textToFilter ; filterValues )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gacss&quot;,&quot;text&quot;:&quot;GetAsCSS ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsDate ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsNumber ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gasvg&quot;,&quot;text&quot;:&quot;GetAsSVG ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsText ( data )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsTime ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsTimestamp ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gaurle&quot;,&quot;text&quot;:&quot;GetAsURLEncoded ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetValue ( listOfValues ; valueNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;Left ( text ; numberOfCharacters )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;LeftValues ( text ; numberOfValues )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lef&quot;,&quot;text&quot;:&quot;LeftWords ( text ; numberOfWords )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;len&quot;,&quot;text&quot;:&quot;Length ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;low&quot;,&quot;text&quot;:&quot;Lower ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;Middle ( text ; start ; numberOfCharacters )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;MiddleValues ( text ; startingValue ; numberOfValues )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mid&quot;,&quot;text&quot;:&quot;MiddleWords ( text ; startingWord ; numberOfWords )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;pat&quot;,&quot;text&quot;:&quot;PatternCount ( text ; searchString )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;pos&quot;,&quot;text&quot;:&quot;Position ( text ; searchString ; start ; occurrence )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;pro&quot;,&quot;text&quot;:&quot;Proper ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;quo&quot;,&quot;text&quot;:&quot;Quote ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rep&quot;,&quot;text&quot;:&quot;Replace ( text ; start ; numberOfCharacters ; replacementText )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;Right ( text ; numberOfCharacters )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;RightValues ( text ; numberOfValues )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rig&quot;,&quot;text&quot;:&quot;RightWords ( text ; numberOfWords )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ser&quot;,&quot;text&quot;:&quot;SerialIncrement ( text ; incrementBy )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sor&quot;,&quot;text&quot;:&quot;SortValues ( values {; datatype ; locale } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sub&quot;,&quot;text&quot;:&quot;Substitute ( text ; searchString ; replaceString )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tri&quot;,&quot;text&quot;:&quot;Trim ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tri&quot;,&quot;text&quot;:&quot;TrimAll ( text ; trimSpaces ; trimType )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;uni&quot;,&quot;text&quot;:&quot;UniqueValues ( values {; datatype ; locale } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;upp&quot;,&quot;text&quot;:&quot;Upper ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueCount ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;wor&quot;,&quot;text&quot;:&quot;WordCount ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rgb&quot;,&quot;text&quot;:&quot;RGB ( red ; green ; blue )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextColor ( text ; RGB ( red ; green ; blue ) )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextColorRemove ( text {; RGB  ( red ; green ; blue )} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFont ( text ; fontName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFontRemove ( text {; fontToRemove } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextFormatRemove ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextSize ( text ; fontSize )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextSizeRemove ( text {; sizeToRemove } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextStyleAdd ( text ; styles )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextStyleRemove ( text ; styles )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;abs&quot;,&quot;text&quot;:&quot;Abs ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cei&quot;,&quot;text&quot;:&quot;Ceiling ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;com&quot;,&quot;text&quot;:&quot;Combination ( setSize ; numberOfChoices )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;div&quot;,&quot;text&quot;:&quot;Div ( number ; divisor )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;exp&quot;,&quot;text&quot;:&quot;Exp ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fac&quot;,&quot;text&quot;:&quot;Factorial ( number {; numberOfFactors} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;flo&quot;,&quot;text&quot;:&quot;Floor ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;int&quot;,&quot;text&quot;:&quot;Int ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lg&quot;,&quot;text&quot;:&quot;Lg ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ln&quot;,&quot;text&quot;:&quot;Ln ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;log&quot;,&quot;text&quot;:&quot;Log ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mod&quot;,&quot;text&quot;:&quot;Mod ( number ; divisor )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ran&quot;,&quot;text&quot;:&quot;Random&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rou&quot;,&quot;text&quot;:&quot;Round ( number ; precision )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;set&quot;,&quot;text&quot;:&quot;SetPrecision ( expression ; precision )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sig&quot;,&quot;text&quot;:&quot;Sign ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sqr&quot;,&quot;text&quot;:&quot;Sqrt ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tru&quot;,&quot;text&quot;:&quot;Truncate ( number ; precision )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;dat&quot;,&quot;text&quot;:&quot;Date ( month ; day ; year )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;Day ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayName ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayOfWeek ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayOfYear ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;Month ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;MonthName ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;wee&quot;,&quot;text&quot;:&quot;WeekOfYear ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;woyf&quot;,&quot;text&quot;:&quot;WeekOfYearFiscal ( date ; startingDay )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;yea&quot;,&quot;text&quot;:&quot;Year ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;hou&quot;,&quot;text&quot;:&quot;Hour ( time )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;min&quot;,&quot;text&quot;:&quot;Minute ( time )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sec&quot;,&quot;text&quot;:&quot;Seconds ( time )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tim&quot;,&quot;text&quot;:&quot;Time ( hours ; minutes ; seconds )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tim&quot;,&quot;text&quot;:&quot;Timestamp ( date ; time )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;Base64Decode ( text {; fileNameWithExtension } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;Base64Encode ( data )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;berfc&quot;,&quot;text&quot;:&quot;Base64EncodeRFC ( RFCNumber ; data )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptAuthCode ( data ; algorithm ; key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDecrypt ( container ; key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDecryptBase64 ( text ; key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptDigest ( data ; algorithm )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptEncrypt ( data ; key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptEncryptBase64 ( data ; key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptGenerateSignature ( data ; algorithm ; privateRSAKey ; keyPassword )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cry&quot;,&quot;text&quot;:&quot;CryptVerifySignature ( data ; algorithm ; publicRSAKey ; signature )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetContainerAttribute ( field ; attributeName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetHeight ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetLiveText ( container ; language )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetThumbnail ( field ; width ; height )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetWidth ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;hex&quot;,&quot;text&quot;:&quot;HexDecode ( data {; fileNameWithExtension } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;hex&quot;,&quot;text&quot;:&quot;HexEncode ( data )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rqrc&quot;,&quot;text&quot;:&quot;ReadQRCode ( container )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextDecode ( container ; encoding )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tex&quot;,&quot;text&quot;:&quot;TextEncode ( text ; encoding ; lineEndings )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ver&quot;,&quot;text&quot;:&quot;VerifyContainer ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;day&quot;,&quot;text&quot;:&quot;DayNameJ ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fur&quot;,&quot;text&quot;:&quot;Furigana ( text {; option } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;hir&quot;,&quot;text&quot;:&quot;Hiragana ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanaHankaku ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanaZenkaku ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;kan&quot;,&quot;text&quot;:&quot;KanjiNumeral ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;kat&quot;,&quot;text&quot;:&quot;Katakana ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;mon&quot;,&quot;text&quot;:&quot;MonthNameJ ( date )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;num&quot;,&quot;text&quot;:&quot;NumToJText ( number ; separator ; characterType )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rom&quot;,&quot;text&quot;:&quot;RomanHankaku ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rom&quot;,&quot;text&quot;:&quot;RomanZenkaku ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;yea&quot;,&quot;text&quot;:&quot;YearName ( date ; format )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsode&quot;,&quot;text&quot;:&quot;JSONDeleteElement ( json ; keyOrIndexOrPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsofe&quot;,&quot;text&quot;:&quot;JSONFormatElements ( json )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsoge&quot;,&quot;text&quot;:&quot;JSONGetElement ( json ; keyOrIndexOrPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsoget&quot;,&quot;text&quot;:&quot;JSONGetElementType ( json ; keyOrIndexOrPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsolk&quot;,&quot;text&quot;:&quot;JSONListKeys ( json ; keyOrIndexOrPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsolv&quot;,&quot;text&quot;:&quot;JSONListValues ( json ; keyOrIndexOrPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;jsose&quot;,&quot;text&quot;:&quot;JSONSetElement ( json ; keyOrIndexOrPath ; value ; type )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ave&quot;,&quot;text&quot;:&quot;Average ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cou&quot;,&quot;text&quot;:&quot;Count ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lis&quot;,&quot;text&quot;:&quot;List ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;max&quot;,&quot;text&quot;:&quot;Max ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;min&quot;,&quot;text&quot;:&quot;Minute ( time )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;std&quot;,&quot;text&quot;:&quot;StDev ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;std&quot;,&quot;text&quot;:&quot;StDevP ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sum&quot;,&quot;text&quot;:&quot;Sum ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;var&quot;,&quot;text&quot;:&quot;Variance ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;var&quot;,&quot;text&quot;:&quot;VarianceP ( field {; field...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ext&quot;,&quot;text&quot;:&quot;Extend ( non-repeatingField )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetRepetition ( repeatingField ; number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;las&quot;,&quot;text&quot;:&quot;Last ( repeatingField )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fv&quot;,&quot;text&quot;:&quot;FV ( payment ; interestRate ; periods )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;npv&quot;,&quot;text&quot;:&quot;NPV ( payment ; interestRate )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;pmt&quot;,&quot;text&quot;:&quot;PMT ( principal ; interestRate ; term )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;pv&quot;,&quot;text&quot;:&quot;PV ( payment ; interestRate ; periods )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;aco&quot;,&quot;text&quot;:&quot;Acos ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;asi&quot;,&quot;text&quot;:&quot;Asin ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ata&quot;,&quot;text&quot;:&quot;Atan ( number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cos&quot;,&quot;text&quot;:&quot;Cos ( angleInRadians )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;deg&quot;,&quot;text&quot;:&quot;Degrees ( angleInRadians )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;pi&quot;,&quot;text&quot;:&quot;Pi&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rad&quot;,&quot;text&quot;:&quot;Radians ( angleInDegrees )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sin&quot;,&quot;text&quot;:&quot;Sin ( angleInRadians )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tan&quot;,&quot;text&quot;:&quot;Tan ( angleInRadians )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cas&quot;,&quot;text&quot;:&quot;Case ( test1 ; result1 {; test2 ; result2 ; ... ; defaultResult} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cho&quot;,&quot;text&quot;:&quot;Choose ( test ; result0 {; result1 ; result2...} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;eva&quot;,&quot;text&quot;:&quot;Evaluate ( expression {; [field1 ; field2 ;...]} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;eva&quot;,&quot;text&quot;:&quot;EvaluationError ( expression )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;esql&quot;,&quot;text&quot;:&quot;ExecuteSQL ( sqlQuery ; fieldSeparator ; rowSeparator { ; arguments... } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAsBoolean ( data )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetField ( fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetNthRecord ( field ; recordNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetSummary ( summaryField ; breakField )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;if&quot;,&quot;text&quot;:&quot;If ( test ; result1 {; result2} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ise&quot;,&quot;text&quot;:&quot;IsEmpty ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;isv&quot;,&quot;text&quot;:&quot;IsValid ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;isv&quot;,&quot;text&quot;:&quot;IsValidExpression ( expression )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;let&quot;,&quot;text&quot;:&quot;Let ( {[} var1 = expression1 {; var2 = expression2...]} ; calculation )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;loo&quot;,&quot;text&quot;:&quot;Lookup ( sourceField {; failExpression} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;loo&quot;,&quot;text&quot;:&quot;LookupNext ( sourceField ; lower/higherFlag )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;sel&quot;,&quot;text&quot;:&quot;Self&quot;},_CR/_        {&quot;shortcut&quot;:&quot;set&quot;,&quot;text&quot;:&quot;SetRecursion ( expression ; maxIterations )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;whi&quot;,&quot;text&quot;:&quot;While ( [ initialVariable ] ; condition ; [ logic ] ; result )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;com&quot;,&quot;text&quot;:&quot;ComputeModel ( modelName ; name1 ; value1 {name2; value2;...nameN; valueN } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetModelAttributes ( modelName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;cffmp&quot;,&quot;text&quot;:&quot;ConvertFromFileMakerPath ( filemakerPath ; format )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ctfmp&quot;,&quot;text&quot;:&quot;ConvertToFileMakerPath ( standardPath ; format )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetAddonInfo ( addonID )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetBaseTableName ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetFieldName ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gloa&quot;,&quot;text&quot;:&quot;GetLayoutObjectAttribute ( objectName ; attributeName {; repetitionNumber ; portalRowNumber} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;glooi&quot;,&quot;text&quot;:&quot;GetLayoutObjectOwnerInfo ( objectID )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;louuid&quot;,&quot;text&quot;:&quot;LayoutObjectUUID&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gaep&quot;,&quot;text&quot;:&quot;Get ( AccountExtendedPrivileges )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountGroupName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gaps&quot;,&quot;text&quot;:&quot;Get ( AccountPrivilegeSetName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( AccountType )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gafc&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldContents )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gaft&quot;,&quot;text&quot;:&quot;Get ( ActiveFieldTableName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;galo&quot;,&quot;text&quot;:&quot;Get ( ActiveLayoutObjectName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gamk&quot;,&quot;text&quot;:&quot;Get ( ActiveModifierKeys )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gapr&quot;,&quot;text&quot;:&quot;Get ( ActivePortalRowNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveRecordNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ActiveRepetitionNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gass&quot;,&quot;text&quot;:&quot;Get ( ActiveSelectionSize )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gass&quot;,&quot;text&quot;:&quot;Get ( ActiveSelectionStart )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gaas&quot;,&quot;text&quot;:&quot;Get ( AllowAbortState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gafbs&quot;,&quot;text&quot;:&quot;Get ( AllowFormattingBarState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationArchitecture )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationLanguage )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ApplicationVersion )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CacheFileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gcfp&quot;,&quot;text&quot;:&quot;Get ( CacheFilePath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CalculationRepetitionNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ConnectionAttributes )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ConnectionState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentDate )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gcep&quot;,&quot;text&quot;:&quot;Get ( CurrentExtendedPrivileges )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gcht&quot;,&quot;text&quot;:&quot;Get ( CurrentHostTimestamp )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gcps&quot;,&quot;text&quot;:&quot;Get ( CurrentPrivilegeSetName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentTime )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( CurrentTimestamp )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gctutcm&quot;,&quot;text&quot;:&quot;Get ( CurrentTimeUTCMicroseconds )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gctutcm&quot;,&quot;text&quot;:&quot;Get ( CurrentTimeUTCMilliseconds )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gcms&quot;,&quot;text&quot;:&quot;Get ( CustomMenuSetName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( DesktopPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( Device )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( DocumentsPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gdpl&quot;,&quot;text&quot;:&quot;Get ( DocumentsPathListing )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( EncryptionState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gecs&quot;,&quot;text&quot;:&quot;Get ( ErrorCaptureState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gfle&quot;,&quot;text&quot;:&quot;Get ( FileLocaleElements )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gfmp&quot;,&quot;text&quot;:&quot;Get ( FileMakerPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FilePath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FileSize )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( FoundCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ghcs&quot;,&quot;text&quot;:&quot;Get ( HighContrastState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ghav&quot;,&quot;text&quot;:&quot;Get ( HostApplicationVersion )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ghipa&quot;,&quot;text&quot;:&quot;Get ( HostIPAddress )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( HostName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gifmp&quot;,&quot;text&quot;:&quot;Get ( InstalledFMPlugins )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gifmpajso&quot;,&quot;text&quot;:&quot;Get ( InstalledFMPluginsAsJSON )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LastError )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gled&quot;,&quot;text&quot;:&quot;Get ( LastErrorDetail )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;glel&quot;,&quot;text&quot;:&quot;Get ( LastErrorLocation )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;glmc&quot;,&quot;text&quot;:&quot;Get ( LastMessageChoice )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutAccess )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( LayoutTableName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;glvs&quot;,&quot;text&quot;:&quot;Get ( LayoutViewState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( MenubarState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ModifiedFields )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gmus&quot;,&quot;text&quot;:&quot;Get ( MultiUserState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( NetworkProtocol )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( NetworkType )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;godfi&quot;,&quot;text&quot;:&quot;Get ( OpenDataFileInfo )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PageCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PageNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gpid&quot;,&quot;text&quot;:&quot;Get ( PersistentID )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PreferencesPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( PrinterName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gqft&quot;,&quot;text&quot;:&quot;Get ( QuickFindText )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RecordAccess )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;grid&quot;,&quot;text&quot;:&quot;Get ( RecordID )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;grmc&quot;,&quot;text&quot;:&quot;Get ( RecordModificationCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RecordNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;groc&quot;,&quot;text&quot;:&quot;Get ( RecordOpenCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gros&quot;,&quot;text&quot;:&quot;Get ( RecordOpenState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;grme&quot;,&quot;text&quot;:&quot;Get ( RegionMonitorEvents )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( RequestCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gros&quot;,&quot;text&quot;:&quot;Get ( RequestOmitState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenDepth )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenHeight )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gssf&quot;,&quot;text&quot;:&quot;Get ( ScreenScaleFactor )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScreenWidth )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gsas&quot;,&quot;text&quot;:&quot;Get ( ScriptAnimationState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptParameter )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( ScriptResult )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SessionIdentifier )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SortState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gsas&quot;,&quot;text&quot;:&quot;Get ( StatusAreaState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemAppearance )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemDrive )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gsipa&quot;,&quot;text&quot;:&quot;Get ( SystemIPAddress )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemLanguage )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gsle&quot;,&quot;text&quot;:&quot;Get ( SystemLocaleElements )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gsica&quot;,&quot;text&quot;:&quot;Get ( SystemNICAddress )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemPlatform )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( SystemVersion )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( TemporaryPath )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtrv&quot;,&quot;text&quot;:&quot;Get ( TextRulerVisible )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtrc&quot;,&quot;text&quot;:&quot;Get ( TotalRecordCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtks&quot;,&quot;text&quot;:&quot;Get ( TouchKeyboardState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtos&quot;,&quot;text&quot;:&quot;Get ( TransactionOpenState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtcp&quot;,&quot;text&quot;:&quot;Get ( TriggerCurrentPanel )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtee&quot;,&quot;text&quot;:&quot;Get ( TriggerExternalEvent )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtgi&quot;,&quot;text&quot;:&quot;Get ( TriggerGestureInfo )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( TriggerKeystroke )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gtmk&quot;,&quot;text&quot;:&quot;Get ( TriggerModifierKeys )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gttp&quot;,&quot;text&quot;:&quot;Get ( TriggerTargetPanel )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( UserCount )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( UserName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gusfs&quot;,&quot;text&quot;:&quot;Get ( UseSystemFormatsState )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;guuid&quot;,&quot;text&quot;:&quot;Get ( UUID )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;guuid&quot;,&quot;text&quot;:&quot;Get ( UUIDNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gwch&quot;,&quot;text&quot;:&quot;Get ( WindowContentHeight )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gwcw&quot;,&quot;text&quot;:&quot;Get ( WindowContentWidth )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gwdh&quot;,&quot;text&quot;:&quot;Get ( WindowDesktopHeight )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gwdw&quot;,&quot;text&quot;:&quot;Get ( WindowDesktopWidth )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowHeight )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowLeft )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowMode )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowOrientation )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowStyle )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowTop )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowVisible )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;Get ( WindowWidth )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gwzl&quot;,&quot;text&quot;:&quot;Get ( WindowZoomLevel )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;btid&quot;,&quot;text&quot;:&quot;BaseTableIDs ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;bas&quot;,&quot;text&quot;:&quot;BaseTableNames ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;dat&quot;,&quot;text&quot;:&quot;DatabaseNames&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldBounds ( fileName ; layoutName ; fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldComment ( fileName ; fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldIDs ( fileName ; layoutName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldNames ( fileName ; layoutName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldRepetitions ( fileName ; layoutName ; fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldStyle ( fileName ; layoutName ; fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;fie&quot;,&quot;text&quot;:&quot;FieldType ( fileName ; fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetNextSerialValue ( fileName ; fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutIDs ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutNames ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;lay&quot;,&quot;text&quot;:&quot;LayoutObjectNames ( fileName ; layoutName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;rel&quot;,&quot;text&quot;:&quot;RelationInfo ( fileName ; tableName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;scr&quot;,&quot;text&quot;:&quot;ScriptIDs ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;scr&quot;,&quot;text&quot;:&quot;ScriptNames ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tab&quot;,&quot;text&quot;:&quot;TableIDs ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;tab&quot;,&quot;text&quot;:&quot;TableNames ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;vlid&quot;,&quot;text&quot;:&quot;ValueListIDs ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueListItems ( fileName ; valueList )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;val&quot;,&quot;text&quot;:&quot;ValueListNames ( fileName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;win&quot;,&quot;text&quot;:&quot;WindowNames {( fileName )}&quot;},_CR/_        {&quot;shortcut&quot;:&quot;gavpa&quot;,&quot;text&quot;:&quot;GetAVPlayerAttribute ( attributeName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;get&quot;,&quot;text&quot;:&quot;GetSensor ( sensorName {; option1 ; option2 } )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;loc&quot;,&quot;text&quot;:&quot;Location ( accuracy {; timeout} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;loc&quot;,&quot;text&quot;:&quot;LocationValues ( accuracy {; timeout} )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;ran&quot;,&quot;text&quot;:&quot;RangeBeacons ( UUID {; timeout; major; minor} )&quot;},_CR/_        _CR/_        // Standardised Comments_CR/_    _CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Dialog&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Launch Actions&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Card Targets&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Footer Action Button #&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// List Action Button #&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Operation Targets&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Optional&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Picker Selections&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Populate Card Fields&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Scripts running after card opens&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Scripts running before card opens&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Virtual List&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;// Virtual List Creation&quot;},_CR/_    _CR/_        // Custom Functions_CR/_        _CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;WritePass ( pass )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ReadPass ( pass )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.GetValuesAtPath ( array ; path )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ScriptNameCamelCase&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ErrorDescription ( errorNumber )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetPermutations ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;HonkIndex ( values )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FullTableSQLasJSON ( tablename ; condition )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;SQLasJSON ( tablename ; fields ; condition )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;NumberFormat ( Number ; DecimalPrecision ; ThousandSeparator )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;SetGlobalVar ( Name ; Value )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FilteredPortalList ( fieldObjectName ; startingPortalRow )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;AntiFilterValues ( ListA ; ListB )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;TrimCR ( text )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getFieldInContext ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getWindowGlobalVar&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.recordState&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPath&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.extendPath ( key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.extendUserPath ( key )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setFieldNameInContext ( fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getFieldValueInContext ( fieldName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleValue ( field )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleSelectedKeys&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModuleSelectedValues&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getModule&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getSubModule&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getUserKey&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPrimaryKey ( instance )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.getPayload ( payloadID )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setSubModuleDAPIRead ( layouts ; response ; limit ; offset )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.jsonArrayObjectWrapValues ( type ; valueList )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.jsonArrayObjectAppendValues ( type ; newValues ; array ; path )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;gsys.setErrorLog ( severity ; notify )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ContainerAttributesAsJSON ( container ; attributeName )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;FormattedBytes ( Bytes ; Rounding ; bitsOrBytes ; DecimalOrBinaryIEC )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetFileSize ( Bytes ; Precision ; UOM ; Format )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CalendarBOX ( m ; y )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ReturnDate ( m ; y ; Cell )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;GetScriptParameter ( Number )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ShowEnd ( xDate )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;ShowMid ( xDate )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;getLine ( value ; List1 )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.eSQL ( field ; modifier ; table ; join ; condition ; group ; order )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;JSON.MakeArrayObject ( ValueList ; Separator )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;fmLocalCSSEditor&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CheckReservedSQL ( keyword )&quot;},_CR/_        {&quot;shortcut&quot;:&quot;&quot;,&quot;text&quot;:&quot;CheckReservedSQLforLayout ( layout )&quot;}_CR/__CR/_    ];_CR/__CR/_    function normalizeInput(str) {_CR/_        return str.trim().toLowerCase();_CR/_    }_CR/__CR/_    function filterSuggestions(query) {_CR/_        query = normalizeInput(query);_CR/_        return filemakerFunctions.filter(fn =&gt; normalizeInput(fn.text).startsWith(query));_CR/_    }_CR/__CR/_    // âœ… Register hint helper_CR/_    CodeMirror.registerHelper(&quot;hint&quot;, &quot;filemaker&quot;, function(editor) {_CR/_        let cur = editor.getCursor();_CR/_        let token = editor.getTokenAt(cur);_CR/_        let word = token.string.trim();_CR/_        let start = token.start, end = token.end;_CR/__CR/_        console.log(&quot;ðŸ›  FileMaker Autocomplete Triggered: &quot;, word);_CR/__CR/_        if (!word) return null; // No input, no suggestions_CR/__CR/_        let suggestions = filterSuggestions(word);_CR/__CR/_        console.log(&quot;ðŸ“Œ Suggestions:&quot;, suggestions);_CR/__CR/_        return {_CR/_            list: suggestions.map(fn =&gt; ({_CR/_                text: formatStackedFunction(fn.text),_CR/_                displayText: fn.text,_CR/_                description: fn.description,_CR/_                render: function(el, self, data) {_CR/_                    // âœ… Clear previous content_CR/_                    el.innerHTML = &quot;&quot;;_CR/__CR/_                    // âœ… Create function name span (bold)_CR/_                    let functionName = document.createElement(&quot;span&quot;);_CR/_                    functionName.textContent = data.displayText;_CR/_                    functionName.style.fontWeight = &quot;normal&quot;;_CR/__CR/_                    // âœ… Create description span (grey italics)_CR/_                    let functionDescription = document.createElement(&quot;span&quot;);_CR/_                    functionDescription.textContent = &quot; - &quot; + data.description;_CR/_                    functionDescription.style.color = &quot;#BBB&quot;;_CR/_                    functionDescription.style.fontStyle = &quot;italic&quot;;_CR/_                    functionDescription.style.paddingLeft = &quot;8px&quot;;_CR/__CR/_                    // âœ… Append both elements_CR/_                    el.appendChild(functionName);_CR/_                    el.appendChild(functionDescription);_CR/_                }_CR/_            })),_CR/_            from: CodeMirror.Pos(cur.line, start),_CR/_            to: CodeMirror.Pos(cur.line, end)_CR/_        };_CR/_    });_CR/__CR/_    // âœ… Format function calls in stacked format_CR/_    function formatStackedFunction(functionText) {_CR/_        let name = functionText.split(&quot; (&quot;)[0];_CR/_        let params = functionText.match(/\((.*)\)/);_CR/_        if (!params) return functionText; // Return as is if no parameters_CR/__CR/_        let paramList = params[1].split(&quot; ; &quot;).map(param =&gt; `    ${param}`).join(&quot; ;\n&quot;);_CR/_        return `${name} (\n${paramList}\n)`;_CR/_    }_CR/_});</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.8E31277D7CEF9FC49092AB3665329589</StringID>
	<SourceText>Set CodeMirror Enviroment Parameters</SourceText>
	<TargetText>Set CodeMirror Enviroment Parameters</TargetText>
	<Comment>com.fmi.scriptstep.text.Set CodeMirror Enviroment Parameters</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.903E3FB1AC7718662C1F5B3DCD4CD88B</StringID>
	<SourceText>Load Editor settings into codeMirror Application in WebViewer</SourceText>
	<TargetText>Load Editor settings into codeMirror Application in WebViewer</TargetText>
	<Comment>com.fmi.scriptstep.text.Load Editor settings into codeMirror Application in WebViewer</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.95D6DC5CF1538A545AF1B399A11C452E</StringID>
	<SourceText>Written on 11.02.2025 |  Updated: 00.00.0000  | Valid: Yes</SourceText>
	<TargetText>Written on 11.02.2025 |  Updated: 00.00.0000  | Valid: Yes</TargetText>
	<Comment>com.fmi.scriptstep.text.Written on 11.02.2025 |  Updated: 00.00.0000  | Valid: Yes</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.9734231DC4431D2F0C8F92AB04376ED3</StringID>
	<SourceText>IDENTIFY AND SET CURRENTLY ACTIVE CODEMIRROR INSTANCE</SourceText>
	<TargetText>IDENTIFY AND SET CURRENTLY ACTIVE CODEMIRROR INSTANCE</TargetText>
	<Comment>com.fmi.scriptstep.text.IDENTIFY AND SET CURRENTLY ACTIVE CODEMIRROR INSTANCE</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.9A6528C4CA0236EE7976B510BD3006F4</StringID>
	<SourceText>Set Defaults and Targets</SourceText>
	<TargetText>Set Defaults and Targets</TargetText>
	<Comment>com.fmi.scriptstep.text.Set Defaults and Targets</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.9AE37220FC92B4C845A3E819F0805A1B</StringID>
	<SourceText>SET CODE MIRROR</SourceText>
	<TargetText>SET CODE MIRROR</TargetText>
	<Comment>com.fmi.scriptstep.text.SET CODE MIRROR</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.A1B75819FDB2FA9E6FFFDB5C6A82363A</StringID>
	<SourceText>This script is not used in this version of the add-on because code2<CR/>is being used to display the results of Auto Executed Code.<CR/><CR/>You can however change the module and use the 2nd pane in the editor,<CR/>set new targets in &apos;initialiseCodeMirror&apos; and replicate &apos;saveCodeMirror1&apos;<CR/>inside of this script targeting your secondary targets.<CR/><CR/>The codeMirror editor will target this script when editing inside of<CR/>the 2nd pane.</SourceText>
	<TargetText>This script is not used in this version of the add-on because code2<CR/>is being used to display the results of Auto Executed Code.<CR/><CR/>You can however change the module and use the 2nd pane in the editor,<CR/>set new targets in &apos;initialiseCodeMirror&apos; and replicate &apos;saveCodeMirror1&apos;<CR/>inside of this script targeting your secondary targets.<CR/><CR/>The codeMirror editor will target this script when editing inside of<CR/>the 2nd pane.</TargetText>
	<Comment>com.fmi.scriptstep.text.This script is not used in this version of the add-on because code2_CR/_is being used to display the results of Auto Executed Code._CR/__CR/_You can however change the module and use the 2nd pane in the editor,_CR/_set new targets in &apos;initialiseCodeMirror&apos; and replicate &apos;saveCodeMirror1&apos;_CR/_inside of this script targeting your secondary targets._CR/__CR/_The codeMirror editor will target this script when editing inside of_CR/_the 2nd pane.</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.A21221DD391E9E3273798A9E1B270259</StringID>
	<SourceText>SET CODE STORAGE TARGET</SourceText>
	<TargetText>SET CODE STORAGE TARGET</TargetText>
	<Comment>com.fmi.scriptstep.text.SET CODE STORAGE TARGET</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.A84F3F5DCF4DC027DC10FA782E44EF1F</StringID>
	<SourceText>Run as PSOS when solution is hosted</SourceText>
	<TargetText>Run as PSOS when solution is hosted</TargetText>
	<Comment>com.fmi.scriptstep.text.Run as PSOS when solution is hosted</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.ABA09ABEAE968FCB2D7635E45EE3A6A6</StringID>
	<SourceText>Scripts Called: <TAB/><TAB/>None</SourceText>
	<TargetText>Scripts Called: <TAB/><TAB/>None</TargetText>
	<Comment>com.fmi.scriptstep.text.Scripts Called: _TAB/__TAB/_None</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.C00FF1B856DA5C1C1CF2DFA03A86534F</StringID>
	<SourceText>Saves code from CodeMirror widget to target</SourceText>
	<TargetText>Saves code from CodeMirror widget to target</TargetText>
	<Comment>com.fmi.scriptstep.text.Saves code from CodeMirror widget to target</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.C0274A85AEFF112F1A79566DA0133448</StringID>
	<SourceText>SAVE CODE TO TARGET DESTINATION</SourceText>
	<TargetText>SAVE CODE TO TARGET DESTINATION</TargetText>
	<Comment>com.fmi.scriptstep.text.SAVE CODE TO TARGET DESTINATION</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.CDFDD882E2FC15C7EB360422FE24AC03</StringID>
	<SourceText>++++++++++++++++++++++++++++++++++++++++++++++++</SourceText>
	<TargetText>++++++++++++++++++++++++++++++++++++++++++++++++</TargetText>
	<Comment>com.fmi.scriptstep.text.++++++++++++++++++++++++++++++++++++++++++++++++</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.D104487C06B29D0C28F1F77A51715663</StringID>
	<SourceText>INITIALISE CODE MIRROR</SourceText>
	<TargetText>INITIALISE CODE MIRROR</TargetText>
	<Comment>com.fmi.scriptstep.text.INITIALISE CODE MIRROR</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.D129570CB279FF510C8A67E223CC63A5</StringID>
	<SourceText>Compatibility: <TAB/><TAB/>FileMaker 18+</SourceText>
	<TargetText>Compatibility: <TAB/><TAB/>FileMaker 18+</TargetText>
	<Comment>com.fmi.scriptstep.text.Compatibility: _TAB/__TAB/_FileMaker 18+</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.DC6591544824F27AA97241A94C3D356A</StringID>
	<SourceText>These can be replaced with references to your own control panel</SourceText>
	<TargetText>These can be replaced with references to your own control panel</TargetText>
	<Comment>com.fmi.scriptstep.text.These can be replaced with references to your own control panel</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.E86010C086642BFFAB7A0C70806276E3</StringID>
	<SourceText>Target is a field in context of the editor&apos;s instance</SourceText>
	<TargetText>Target is a field in context of the editor&apos;s instance</TargetText>
	<Comment>com.fmi.scriptstep.text.Target is a field in context of the editor&apos;s instance</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.E9F886B04A084FD7228EF2E0BC9822E7</StringID>
	<SourceText>Activation: <TAB/><TAB/><TAB/>User action, script or trigger</SourceText>
	<TargetText>Activation: <TAB/><TAB/><TAB/>User action, script or trigger</TargetText>
	<Comment>com.fmi.scriptstep.text.Activation: _TAB/__TAB/__TAB/_User action, script or trigger</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.EE4F5D3F19925A0F23538767B3CE5BC6</StringID>
	<SourceText>&lt;!DOCTYPE html&gt;<CR/>&lt;html lang=&quot;en&quot;&gt;<CR/>&lt;head&gt;<CR/>    &lt;meta charset=&quot;UTF-8&quot;&gt;<CR/>    &lt;title&gt;FileMaker Code Editor&lt;/title&gt;<CR/><CR/>    &lt;!-- CodeMirror Core --&gt;<CR/>    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js&quot;&gt;&lt;/script&gt;<CR/>    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css&quot;&gt;<CR/><CR/>    &lt;!-- Addons --&gt;<CR/>    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.js&quot;&gt;&lt;/script&gt;<CR/>    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.css&quot;&gt;<CR/><CR/>    &lt;!-- Load FileMaker Syntax &amp; Hinting from Local Server --&gt;<CR/>    &lt;script&gt;{{fmSyntax}}&lt;/script&gt;<CR/>    &lt;script&gt;{{fmHint}}&lt;/script&gt;<CR/><CR/>    &lt;style&gt;<CR/>        body {<CR/>            margin: 0;<CR/>            padding: 0;<CR/>            font-family: Arial, sans-serif;<CR/>            height: 100vh;<CR/>            overflow: hidden;<CR/>        }<CR/>        <CR/>        #container {<CR/>            display: flex;<CR/>            width: 100vw;<CR/>            height: 100vh;<CR/>        }<CR/><CR/>        .editor-container {<CR/>            flex-grow: 1;<CR/>            height: 100vh;<CR/>            position: relative;<CR/>            border-right: 1px solid #ccc;<CR/>        }<CR/><CR/>        .CodeMirror {<CR/>            height: 100vh;<CR/>            width: 100%;<CR/>            background: {{background}};<CR/>            font-family: {{fontName}};<CR/>            font-size: {{fontSize}}px; /* Default font size */<CR/>        }<CR/><CR/>        .splitter {<CR/>            background: #ccc;<CR/>            z-index: 10;<CR/>            flex-shrink: 0;<CR/>        }<CR/><CR/>        .splitter.horizontal {<CR/>            width: 100%;<CR/>            height: 8px;<CR/>            cursor: ns-resize;<CR/>        }<CR/><CR/>        .splitter.vertical {<CR/>            width: 8px;<CR/>            height: 100vh;<CR/>            cursor: ew-resize;<CR/>        }<CR/>        <CR/>        li.CodeMirror-hint-active {<CR/>            background: #000;<CR/>        }<CR/><CR/><TAB/>.cm-keyword {<CR/><TAB/><TAB/>color:{{keyword}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-string {<CR/><TAB/><TAB/>color:{{string}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-number {<CR/><TAB/><TAB/>color:{{number}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-comment {<CR/><TAB/><TAB/>color:{{comment}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-variable-2 {<CR/><TAB/><TAB/>color:{{variable-2}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-builtin {<CR/><TAB/><TAB/>color:{{builtin}}<CR/><TAB/>}<CR/>                        <CR/>    &lt;/style&gt;<CR/>&lt;/head&gt;<CR/>&lt;body&gt;<CR/>    &lt;div id=&quot;container&quot;&gt;<CR/>        &lt;div id=&quot;editorContainer1&quot; class=&quot;editor-container&quot;&gt;<CR/>            &lt;div id=&quot;editor1&quot;&gt;&lt;/div&gt;<CR/>        &lt;/div&gt;<CR/><CR/>        &lt;div id=&quot;splitter&quot; class=&quot;splitter&quot;&gt;&lt;/div&gt;<CR/><CR/>        &lt;div id=&quot;editorContainer2&quot; class=&quot;editor-container&quot;&gt;<CR/>            &lt;div id=&quot;editor2&quot;&gt;&lt;/div&gt;<CR/>        &lt;/div&gt;<CR/>    &lt;/div&gt;<CR/>    <CR/>&lt;script&gt;<CR/>    var layoutMode = 0;<CR/><CR/>    window.setWindowMode = function(mode) {<CR/>        console.log(&quot;setWindowMode called with mode:&quot;, mode);<CR/>        layoutMode = parseInt(mode, 10);<CR/>        configureLayout();<CR/>    };<CR/><CR/>    function configureLayout() {<CR/>        console.log(&quot;Configuring layout for mode:&quot;, layoutMode);<CR/>        let container = document.getElementById(&quot;container&quot;);<CR/>        let editor1 = document.getElementById(&quot;editorContainer1&quot;);<CR/>        let editor2 = document.getElementById(&quot;editorContainer2&quot;);<CR/>        let splitter = document.getElementById(&quot;splitter&quot;);<CR/><CR/>        if (layoutMode === 0) {<CR/>            console.log(&quot;Switching to Full Mode&quot;);<CR/>            editor2.style.display = &quot;none&quot;;<CR/>            splitter.style.display = &quot;none&quot;;<CR/>            container.style.flexDirection = &quot;row&quot;;<CR/>            editor1.style.width = &quot;100vw&quot;;<CR/>            editor1.style.height = &quot;100vh&quot;;<CR/>        } else {<CR/>            console.log(&quot;Enabling Split Mode&quot;);<CR/>            editor2.style.display = &quot;block&quot;;<CR/>            splitter.style.display = &quot;block&quot;;<CR/><CR/>            if (layoutMode === 1) {<CR/>                container.style.flexDirection = &quot;column&quot;;<CR/>                editor1.style.height = &quot;50vh&quot;;<CR/>                editor2.style.height = &quot;50vh&quot;;<CR/>                editor1.style.width = &quot;100vw&quot;;<CR/>                editor2.style.width = &quot;100vw&quot;;<CR/>                splitter.classList.add(&quot;horizontal&quot;);<CR/>                splitter.classList.remove(&quot;vertical&quot;);<CR/>            } else if (layoutMode === 2) {<CR/>                container.style.flexDirection = &quot;row&quot;;<CR/>                editor1.style.width = &quot;50vw&quot;;<CR/>                editor2.style.width = &quot;50vw&quot;;<CR/>                editor1.style.height = &quot;100vh&quot;;<CR/>                editor2.style.height = &quot;100vh&quot;;<CR/>                splitter.classList.add(&quot;vertical&quot;);<CR/>                splitter.classList.remove(&quot;horizontal&quot;);<CR/>            }<CR/>        }<CR/>    }<CR/><CR/>    configureLayout();<CR/><CR/>    console.log(&quot;Initializing CodeMirror Instances&quot;);<CR/><CR/>    var editorInstance1 = CodeMirror(document.getElementById(&quot;editor1&quot;), {<CR/>        mode: &quot;filemaker&quot;,<CR/>        theme: &quot;default&quot;,<CR/>        lineNumbers: true,<CR/>        hintOptions: { hint: CodeMirror.hint.filemaker }<CR/>    });<CR/><CR/>    var editorInstance2 = CodeMirror(document.getElementById(&quot;editor2&quot;), {<CR/>        mode: &quot;filemaker&quot;,<CR/>        theme: &quot;default&quot;,<CR/>        lineNumbers: true,<CR/>        hintOptions: { hint: CodeMirror.hint.filemaker }<CR/>    });<CR/><CR/>    console.log(&quot;CodeMirror Instances Created&quot;);<CR/><CR/>    window.loadCode1 = function(code) {<CR/>        console.log(&quot;loadCode1() called with:&quot;, code);<CR/>        if (!editorInstance1) {<CR/>            console.error(&quot;editorInstance1 is undefined!&quot;);<CR/>            return;<CR/>        }<CR/><CR/>        console.log(&quot;Editor 1 Content BEFORE:&quot;, editorInstance1.getValue());<CR/>        editorInstance1.setValue(code);<CR/>        editorInstance1.refresh(); // Forces UI refresh<CR/>        console.log(&quot;Editor 1 Content AFTER:&quot;, editorInstance1.getValue());<CR/>    };<CR/><CR/>    window.loadCode2 = function(code) {<CR/>        console.log(&quot;loadCode2() called with:&quot;, code);<CR/>        if (!editorInstance2) {<CR/>            console.error(&quot;editorInstance2 is undefined!&quot;);<CR/>            return;<CR/>        }<CR/><CR/>        console.log(&quot;Editor 2 Content BEFORE:&quot;, editorInstance2.getValue());<CR/>        editorInstance2.setValue(code);<CR/>        editorInstance2.refresh(); // Forces UI refresh<CR/>        console.log(&quot;Editor 2 Content AFTER:&quot;, editorInstance2.getValue());<CR/>    };<CR/><CR/>    window.setEditorFont = function(fontFamily, fontSize) {<CR/>        console.log(&quot;setEditorFont called with:&quot;, fontFamily, fontSize);<CR/>        let editorElements = document.querySelectorAll(&quot;.CodeMirror&quot;);<CR/>        editorElements.forEach(el =&gt; {<CR/>            if (fontFamily) el.style.fontFamily = fontFamily;<CR/>            if (fontSize) el.style.fontSize = fontSize + &quot;px&quot;;<CR/>        });<CR/>    };<CR/><CR/>    // Debugging in applySettings<CR/>    window.applySettings = function(payload) {<CR/>    console.log(&quot;applySettings() called&quot;);<CR/>    <CR/>    // If payload is a string, parse it as JSON<CR/>    if (typeof payload === &quot;string&quot;) {<CR/>        console.log(&quot;Received payload as string, parsing JSON...&quot;);<CR/>        try {<CR/>            payload = JSON.parse(payload);<CR/>        } catch (error) {<CR/>            console.error(&quot;Failed to parse payload:&quot;, error);<CR/>            return;<CR/>        }<CR/>    }<CR/><CR/>    console.log(&quot;Full payload received:&quot;, JSON.stringify(payload, null, 2));<CR/><CR/>    if (payload.windowMode !== undefined) {<CR/>            console.log(&quot;Applying windowMode:&quot;, payload.windowMode);<CR/>            setWindowMode(payload.windowMode);<CR/>        } else {<CR/>            console.warn(&quot;No windowMode provided, keeping current setting.&quot;);<CR/>        }<CR/><CR/>        if (payload.code1 !== undefined) {<CR/>            console.log(&quot;Applying code1...&quot;);<CR/>            loadCode1(payload.code1);<CR/>        } else {<CR/>            console.warn(&quot;No code1 provided, keeping current content.&quot;);<CR/>        }<CR/><CR/>        if (payload.code2 !== undefined) {<CR/>            console.log(&quot;Applying code2...&quot;);<CR/>            loadCode2(payload.code2);<CR/>        } else {<CR/>            console.warn(&quot;No code2 provided, keeping current content.&quot;);<CR/>        }<CR/><CR/>        if (payload.fontFamily !== undefined || payload.fontSize !== undefined) {<CR/>            console.log(&quot;Applying font settings:&quot;, payload.fontFamily, payload.fontSize);<CR/>            setEditorFont(payload.fontFamily, payload.fontSize);<CR/>        } else {<CR/>            console.warn(&quot;No font settings provided, keeping current values.&quot;);<CR/>        }<CR/>    };<CR/><CR/>    editorInstance1.on(&quot;change&quot;, function() {<CR/>        let code = editorInstance1.getValue();<CR/>        console.log(&quot;Editor 1 content changed. Saving to FileMaker:&quot;, code);<CR/>        FileMaker.PerformScript(&quot;codeMirrorSaveCode1&quot;, code);<CR/>    });<CR/><CR/>    editorInstance2.on(&quot;change&quot;, function() {<CR/>        let code = editorInstance2.getValue();<CR/>        console.log(&quot;Editor 2 content changed. Saving to FileMaker:&quot;, code);<CR/>        FileMaker.PerformScript(&quot;codeMirrorSaveCode2&quot;, code);<CR/>    });<CR/><CR/>    editorInstance1.on(&quot;inputRead&quot;, function(cm) {<CR/>        if (!cm.state.completionActive) cm.showHint({ hint: CodeMirror.hint.filemaker, completeSingle: false });<CR/>    });<CR/><CR/>    editorInstance2.on(&quot;inputRead&quot;, function(cm) {<CR/>        if (!cm.state.completionActive) cm.showHint({ hint: CodeMirror.hint.filemaker, completeSingle: false });<CR/>    });<CR/><CR/>    // Splitter Dragging Fix<CR/>    let isResizing = false;<CR/><CR/>    document.getElementById(&quot;splitter&quot;).addEventListener(&quot;mousedown&quot;, function(e) {<CR/>        e.preventDefault();<CR/>        isResizing = true;<CR/>        document.addEventListener(&quot;mousemove&quot;, resizeEditor);<CR/>        document.addEventListener(&quot;mouseup&quot;, () =&gt; {<CR/>            isResizing = false;<CR/>            document.removeEventListener(&quot;mousemove&quot;, resizeEditor);<CR/>        });<CR/>    });<CR/><CR/>    function resizeEditor(e) {<CR/>        if (!isResizing) return;<CR/><CR/>        let editor1 = document.getElementById(&quot;editorContainer1&quot;);<CR/>        let editor2 = document.getElementById(&quot;editorContainer2&quot;);<CR/>        let container = document.getElementById(&quot;container&quot;);<CR/><CR/>        if (layoutMode === 1) {<CR/>            let totalHeight = container.clientHeight;<CR/>            let newHeight = Math.max(50, Math.min(totalHeight - 50, e.clientY));<CR/>            editor1.style.height = newHeight + &quot;px&quot;;<CR/>            editor2.style.height = (totalHeight - newHeight - 8) + &quot;px&quot;;<CR/>        } else if (layoutMode === 2) {<CR/>            let totalWidth = container.clientWidth;<CR/>            let newWidth = Math.max(50, Math.min(totalWidth - 50, e.clientX));<CR/>            editor1.style.width = newWidth + &quot;px&quot;;<CR/>            editor2.style.width = (totalWidth - newWidth - 8) + &quot;px&quot;;<CR/>        }<CR/>    }<CR/><CR/>&lt;/script&gt;<CR/><CR/>&lt;/body&gt;<CR/>&lt;/html&gt;</SourceText>
	<TargetText>&lt;!DOCTYPE html&gt;<CR/>&lt;html lang=&quot;en&quot;&gt;<CR/>&lt;head&gt;<CR/>    &lt;meta charset=&quot;UTF-8&quot;&gt;<CR/>    &lt;title&gt;FileMaker Code Editor&lt;/title&gt;<CR/><CR/>    &lt;!-- CodeMirror Core --&gt;<CR/>    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js&quot;&gt;&lt;/script&gt;<CR/>    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css&quot;&gt;<CR/><CR/>    &lt;!-- Addons --&gt;<CR/>    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.js&quot;&gt;&lt;/script&gt;<CR/>    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.css&quot;&gt;<CR/><CR/>    &lt;!-- Load FileMaker Syntax &amp; Hinting from Local Server --&gt;<CR/>    &lt;script&gt;{{fmSyntax}}&lt;/script&gt;<CR/>    &lt;script&gt;{{fmHint}}&lt;/script&gt;<CR/><CR/>    &lt;style&gt;<CR/>        body {<CR/>            margin: 0;<CR/>            padding: 0;<CR/>            font-family: Arial, sans-serif;<CR/>            height: 100vh;<CR/>            overflow: hidden;<CR/>        }<CR/>        <CR/>        #container {<CR/>            display: flex;<CR/>            width: 100vw;<CR/>            height: 100vh;<CR/>        }<CR/><CR/>        .editor-container {<CR/>            flex-grow: 1;<CR/>            height: 100vh;<CR/>            position: relative;<CR/>            border-right: 1px solid #ccc;<CR/>        }<CR/><CR/>        .CodeMirror {<CR/>            height: 100vh;<CR/>            width: 100%;<CR/>            background: {{background}};<CR/>            font-family: {{fontName}};<CR/>            font-size: {{fontSize}}px; /* Default font size */<CR/>        }<CR/><CR/>        .splitter {<CR/>            background: #ccc;<CR/>            z-index: 10;<CR/>            flex-shrink: 0;<CR/>        }<CR/><CR/>        .splitter.horizontal {<CR/>            width: 100%;<CR/>            height: 8px;<CR/>            cursor: ns-resize;<CR/>        }<CR/><CR/>        .splitter.vertical {<CR/>            width: 8px;<CR/>            height: 100vh;<CR/>            cursor: ew-resize;<CR/>        }<CR/>        <CR/>        li.CodeMirror-hint-active {<CR/>            background: #000;<CR/>        }<CR/><CR/><TAB/>.cm-keyword {<CR/><TAB/><TAB/>color:{{keyword}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-string {<CR/><TAB/><TAB/>color:{{string}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-number {<CR/><TAB/><TAB/>color:{{number}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-comment {<CR/><TAB/><TAB/>color:{{comment}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-variable-2 {<CR/><TAB/><TAB/>color:{{variable-2}}<CR/><TAB/>}<CR/><TAB/><CR/><TAB/>.cm-builtin {<CR/><TAB/><TAB/>color:{{builtin}}<CR/><TAB/>}<CR/>                        <CR/>    &lt;/style&gt;<CR/>&lt;/head&gt;<CR/>&lt;body&gt;<CR/>    &lt;div id=&quot;container&quot;&gt;<CR/>        &lt;div id=&quot;editorContainer1&quot; class=&quot;editor-container&quot;&gt;<CR/>            &lt;div id=&quot;editor1&quot;&gt;&lt;/div&gt;<CR/>        &lt;/div&gt;<CR/><CR/>        &lt;div id=&quot;splitter&quot; class=&quot;splitter&quot;&gt;&lt;/div&gt;<CR/><CR/>        &lt;div id=&quot;editorContainer2&quot; class=&quot;editor-container&quot;&gt;<CR/>            &lt;div id=&quot;editor2&quot;&gt;&lt;/div&gt;<CR/>        &lt;/div&gt;<CR/>    &lt;/div&gt;<CR/>    <CR/>&lt;script&gt;<CR/>    var layoutMode = 0;<CR/><CR/>    window.setWindowMode = function(mode) {<CR/>        console.log(&quot;setWindowMode called with mode:&quot;, mode);<CR/>        layoutMode = parseInt(mode, 10);<CR/>        configureLayout();<CR/>    };<CR/><CR/>    function configureLayout() {<CR/>        console.log(&quot;Configuring layout for mode:&quot;, layoutMode);<CR/>        let container = document.getElementById(&quot;container&quot;);<CR/>        let editor1 = document.getElementById(&quot;editorContainer1&quot;);<CR/>        let editor2 = document.getElementById(&quot;editorContainer2&quot;);<CR/>        let splitter = document.getElementById(&quot;splitter&quot;);<CR/><CR/>        if (layoutMode === 0) {<CR/>            console.log(&quot;Switching to Full Mode&quot;);<CR/>            editor2.style.display = &quot;none&quot;;<CR/>            splitter.style.display = &quot;none&quot;;<CR/>            container.style.flexDirection = &quot;row&quot;;<CR/>            editor1.style.width = &quot;100vw&quot;;<CR/>            editor1.style.height = &quot;100vh&quot;;<CR/>        } else {<CR/>            console.log(&quot;Enabling Split Mode&quot;);<CR/>            editor2.style.display = &quot;block&quot;;<CR/>            splitter.style.display = &quot;block&quot;;<CR/><CR/>            if (layoutMode === 1) {<CR/>                container.style.flexDirection = &quot;column&quot;;<CR/>                editor1.style.height = &quot;50vh&quot;;<CR/>                editor2.style.height = &quot;50vh&quot;;<CR/>                editor1.style.width = &quot;100vw&quot;;<CR/>                editor2.style.width = &quot;100vw&quot;;<CR/>                splitter.classList.add(&quot;horizontal&quot;);<CR/>                splitter.classList.remove(&quot;vertical&quot;);<CR/>            } else if (layoutMode === 2) {<CR/>                container.style.flexDirection = &quot;row&quot;;<CR/>                editor1.style.width = &quot;50vw&quot;;<CR/>                editor2.style.width = &quot;50vw&quot;;<CR/>                editor1.style.height = &quot;100vh&quot;;<CR/>                editor2.style.height = &quot;100vh&quot;;<CR/>                splitter.classList.add(&quot;vertical&quot;);<CR/>                splitter.classList.remove(&quot;horizontal&quot;);<CR/>            }<CR/>        }<CR/>    }<CR/><CR/>    configureLayout();<CR/><CR/>    console.log(&quot;Initializing CodeMirror Instances&quot;);<CR/><CR/>    var editorInstance1 = CodeMirror(document.getElementById(&quot;editor1&quot;), {<CR/>        mode: &quot;filemaker&quot;,<CR/>        theme: &quot;default&quot;,<CR/>        lineNumbers: true,<CR/>        hintOptions: { hint: CodeMirror.hint.filemaker }<CR/>    });<CR/><CR/>    var editorInstance2 = CodeMirror(document.getElementById(&quot;editor2&quot;), {<CR/>        mode: &quot;filemaker&quot;,<CR/>        theme: &quot;default&quot;,<CR/>        lineNumbers: true,<CR/>        hintOptions: { hint: CodeMirror.hint.filemaker }<CR/>    });<CR/><CR/>    console.log(&quot;CodeMirror Instances Created&quot;);<CR/><CR/>    window.loadCode1 = function(code) {<CR/>        console.log(&quot;loadCode1() called with:&quot;, code);<CR/>        if (!editorInstance1) {<CR/>            console.error(&quot;editorInstance1 is undefined!&quot;);<CR/>            return;<CR/>        }<CR/><CR/>        console.log(&quot;Editor 1 Content BEFORE:&quot;, editorInstance1.getValue());<CR/>        editorInstance1.setValue(code);<CR/>        editorInstance1.refresh(); // Forces UI refresh<CR/>        console.log(&quot;Editor 1 Content AFTER:&quot;, editorInstance1.getValue());<CR/>    };<CR/><CR/>    window.loadCode2 = function(code) {<CR/>        console.log(&quot;loadCode2() called with:&quot;, code);<CR/>        if (!editorInstance2) {<CR/>            console.error(&quot;editorInstance2 is undefined!&quot;);<CR/>            return;<CR/>        }<CR/><CR/>        console.log(&quot;Editor 2 Content BEFORE:&quot;, editorInstance2.getValue());<CR/>        editorInstance2.setValue(code);<CR/>        editorInstance2.refresh(); // Forces UI refresh<CR/>        console.log(&quot;Editor 2 Content AFTER:&quot;, editorInstance2.getValue());<CR/>    };<CR/><CR/>    window.setEditorFont = function(fontFamily, fontSize) {<CR/>        console.log(&quot;setEditorFont called with:&quot;, fontFamily, fontSize);<CR/>        let editorElements = document.querySelectorAll(&quot;.CodeMirror&quot;);<CR/>        editorElements.forEach(el =&gt; {<CR/>            if (fontFamily) el.style.fontFamily = fontFamily;<CR/>            if (fontSize) el.style.fontSize = fontSize + &quot;px&quot;;<CR/>        });<CR/>    };<CR/><CR/>    // Debugging in applySettings<CR/>    window.applySettings = function(payload) {<CR/>    console.log(&quot;applySettings() called&quot;);<CR/>    <CR/>    // If payload is a string, parse it as JSON<CR/>    if (typeof payload === &quot;string&quot;) {<CR/>        console.log(&quot;Received payload as string, parsing JSON...&quot;);<CR/>        try {<CR/>            payload = JSON.parse(payload);<CR/>        } catch (error) {<CR/>            console.error(&quot;Failed to parse payload:&quot;, error);<CR/>            return;<CR/>        }<CR/>    }<CR/><CR/>    console.log(&quot;Full payload received:&quot;, JSON.stringify(payload, null, 2));<CR/><CR/>    if (payload.windowMode !== undefined) {<CR/>            console.log(&quot;Applying windowMode:&quot;, payload.windowMode);<CR/>            setWindowMode(payload.windowMode);<CR/>        } else {<CR/>            console.warn(&quot;No windowMode provided, keeping current setting.&quot;);<CR/>        }<CR/><CR/>        if (payload.code1 !== undefined) {<CR/>            console.log(&quot;Applying code1...&quot;);<CR/>            loadCode1(payload.code1);<CR/>        } else {<CR/>            console.warn(&quot;No code1 provided, keeping current content.&quot;);<CR/>        }<CR/><CR/>        if (payload.code2 !== undefined) {<CR/>            console.log(&quot;Applying code2...&quot;);<CR/>            loadCode2(payload.code2);<CR/>        } else {<CR/>            console.warn(&quot;No code2 provided, keeping current content.&quot;);<CR/>        }<CR/><CR/>        if (payload.fontFamily !== undefined || payload.fontSize !== undefined) {<CR/>            console.log(&quot;Applying font settings:&quot;, payload.fontFamily, payload.fontSize);<CR/>            setEditorFont(payload.fontFamily, payload.fontSize);<CR/>        } else {<CR/>            console.warn(&quot;No font settings provided, keeping current values.&quot;);<CR/>        }<CR/>    };<CR/><CR/>    editorInstance1.on(&quot;change&quot;, function() {<CR/>        let code = editorInstance1.getValue();<CR/>        console.log(&quot;Editor 1 content changed. Saving to FileMaker:&quot;, code);<CR/>        FileMaker.PerformScript(&quot;codeMirrorSaveCode1&quot;, code);<CR/>    });<CR/><CR/>    editorInstance2.on(&quot;change&quot;, function() {<CR/>        let code = editorInstance2.getValue();<CR/>        console.log(&quot;Editor 2 content changed. Saving to FileMaker:&quot;, code);<CR/>        FileMaker.PerformScript(&quot;codeMirrorSaveCode2&quot;, code);<CR/>    });<CR/><CR/>    editorInstance1.on(&quot;inputRead&quot;, function(cm) {<CR/>        if (!cm.state.completionActive) cm.showHint({ hint: CodeMirror.hint.filemaker, completeSingle: false });<CR/>    });<CR/><CR/>    editorInstance2.on(&quot;inputRead&quot;, function(cm) {<CR/>        if (!cm.state.completionActive) cm.showHint({ hint: CodeMirror.hint.filemaker, completeSingle: false });<CR/>    });<CR/><CR/>    // Splitter Dragging Fix<CR/>    let isResizing = false;<CR/><CR/>    document.getElementById(&quot;splitter&quot;).addEventListener(&quot;mousedown&quot;, function(e) {<CR/>        e.preventDefault();<CR/>        isResizing = true;<CR/>        document.addEventListener(&quot;mousemove&quot;, resizeEditor);<CR/>        document.addEventListener(&quot;mouseup&quot;, () =&gt; {<CR/>            isResizing = false;<CR/>            document.removeEventListener(&quot;mousemove&quot;, resizeEditor);<CR/>        });<CR/>    });<CR/><CR/>    function resizeEditor(e) {<CR/>        if (!isResizing) return;<CR/><CR/>        let editor1 = document.getElementById(&quot;editorContainer1&quot;);<CR/>        let editor2 = document.getElementById(&quot;editorContainer2&quot;);<CR/>        let container = document.getElementById(&quot;container&quot;);<CR/><CR/>        if (layoutMode === 1) {<CR/>            let totalHeight = container.clientHeight;<CR/>            let newHeight = Math.max(50, Math.min(totalHeight - 50, e.clientY));<CR/>            editor1.style.height = newHeight + &quot;px&quot;;<CR/>            editor2.style.height = (totalHeight - newHeight - 8) + &quot;px&quot;;<CR/>        } else if (layoutMode === 2) {<CR/>            let totalWidth = container.clientWidth;<CR/>            let newWidth = Math.max(50, Math.min(totalWidth - 50, e.clientX));<CR/>            editor1.style.width = newWidth + &quot;px&quot;;<CR/>            editor2.style.width = (totalWidth - newWidth - 8) + &quot;px&quot;;<CR/>        }<CR/>    }<CR/><CR/>&lt;/script&gt;<CR/><CR/>&lt;/body&gt;<CR/>&lt;/html&gt;</TargetText>
	<Comment>com.fmi.scriptstep.text.&lt;!DOCTYPE html&gt;_CR/_&lt;html lang=&quot;en&quot;&gt;_CR/_&lt;head&gt;_CR/_    &lt;meta charset=&quot;UTF-8&quot;&gt;_CR/_    &lt;title&gt;FileMaker Code Editor&lt;/title&gt;_CR/__CR/_    &lt;!-- CodeMirror Core --&gt;_CR/_    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js&quot;&gt;&lt;/script&gt;_CR/_    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css&quot;&gt;_CR/__CR/_    &lt;!-- Addons --&gt;_CR/_    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.js&quot;&gt;&lt;/script&gt;_CR/_    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/addon/hint/show-hint.min.css&quot;&gt;_CR/__CR/_    &lt;!-- Load FileMaker Syntax &amp; Hinting from Local Server --&gt;_CR/_    &lt;script&gt;{{fmSyntax}}&lt;/script&gt;_CR/_    &lt;script&gt;{{fmHint}}&lt;/script&gt;_CR/__CR/_    &lt;style&gt;_CR/_        body {_CR/_            margin: 0;_CR/_            padding: 0;_CR/_            font-family: Arial, sans-serif;_CR/_            height: 100vh;_CR/_            overflow: hidden;_CR/_        }_CR/_        _CR/_        #container {_CR/_            display: flex;_CR/_            width: 100vw;_CR/_            height: 100vh;_CR/_        }_CR/__CR/_        .editor-container {_CR/_            flex-grow: 1;_CR/_            height: 100vh;_CR/_            position: relative;_CR/_            border-right: 1px solid #ccc;_CR/_        }_CR/__CR/_        .CodeMirror {_CR/_            height: 100vh;_CR/_            width: 100%;_CR/_            background: {{background}};_CR/_            font-family: {{fontName}};_CR/_            font-size: {{fontSize}}px; /* Default font size */_CR/_        }_CR/__CR/_        .splitter {_CR/_            background: #ccc;_CR/_            z-index: 10;_CR/_            flex-shrink: 0;_CR/_        }_CR/__CR/_        .splitter.horizontal {_CR/_            width: 100%;_CR/_            height: 8px;_CR/_            cursor: ns-resize;_CR/_        }_CR/__CR/_        .splitter.vertical {_CR/_            width: 8px;_CR/_            height: 100vh;_CR/_            cursor: ew-resize;_CR/_        }_CR/_        _CR/_        li.CodeMirror-hint-active {_CR/_            background: #000;_CR/_        }_CR/__CR/__TAB/_.cm-keyword {_CR/__TAB/__TAB/_color:{{keyword}}_CR/__TAB/_}_CR/__TAB/__CR/__TAB/_.cm-string {_CR/__TAB/__TAB/_color:{{string}}_CR/__TAB/_}_CR/__TAB/__CR/__TAB/_.cm-number {_CR/__TAB/__TAB/_color:{{number}}_CR/__TAB/_}_CR/__TAB/__CR/__TAB/_.cm-comment {_CR/__TAB/__TAB/_color:{{comment}}_CR/__TAB/_}_CR/__TAB/__CR/__TAB/_.cm-variable-2 {_CR/__TAB/__TAB/_color:{{variable-2}}_CR/__TAB/_}_CR/__TAB/__CR/__TAB/_.cm-builtin {_CR/__TAB/__TAB/_color:{{builtin}}_CR/__TAB/_}_CR/_                        _CR/_    &lt;/style&gt;_CR/_&lt;/head&gt;_CR/_&lt;body&gt;_CR/_    &lt;div id=&quot;container&quot;&gt;_CR/_        &lt;div id=&quot;editorContainer1&quot; class=&quot;editor-container&quot;&gt;_CR/_            &lt;div id=&quot;editor1&quot;&gt;&lt;/div&gt;_CR/_        &lt;/div&gt;_CR/__CR/_        &lt;div id=&quot;splitter&quot; class=&quot;splitter&quot;&gt;&lt;/div&gt;_CR/__CR/_        &lt;div id=&quot;editorContainer2&quot; class=&quot;editor-container&quot;&gt;_CR/_            &lt;div id=&quot;editor2&quot;&gt;&lt;/div&gt;_CR/_        &lt;/div&gt;_CR/_    &lt;/div&gt;_CR/_    _CR/_&lt;script&gt;_CR/_    var layoutMode = 0;_CR/__CR/_    window.setWindowMode = function(mode) {_CR/_        console.log(&quot;setWindowMode called with mode:&quot;, mode);_CR/_        layoutMode = parseInt(mode, 10);_CR/_        configureLayout();_CR/_    };_CR/__CR/_    function configureLayout() {_CR/_        console.log(&quot;Configuring layout for mode:&quot;, layoutMode);_CR/_        let container = document.getElementById(&quot;container&quot;);_CR/_        let editor1 = document.getElementById(&quot;editorContainer1&quot;);_CR/_        let editor2 = document.getElementById(&quot;editorContainer2&quot;);_CR/_        let splitter = document.getElementById(&quot;splitter&quot;);_CR/__CR/_        if (layoutMode === 0) {_CR/_            console.log(&quot;Switching to Full Mode&quot;);_CR/_            editor2.style.display = &quot;none&quot;;_CR/_            splitter.style.display = &quot;none&quot;;_CR/_            container.style.flexDirection = &quot;row&quot;;_CR/_            editor1.style.width = &quot;100vw&quot;;_CR/_            editor1.style.height = &quot;100vh&quot;;_CR/_        } else {_CR/_            console.log(&quot;Enabling Split Mode&quot;);_CR/_            editor2.style.display = &quot;block&quot;;_CR/_            splitter.style.display = &quot;block&quot;;_CR/__CR/_            if (layoutMode === 1) {_CR/_                container.style.flexDirection = &quot;column&quot;;_CR/_                editor1.style.height = &quot;50vh&quot;;_CR/_                editor2.style.height = &quot;50vh&quot;;_CR/_                editor1.style.width = &quot;100vw&quot;;_CR/_                editor2.style.width = &quot;100vw&quot;;_CR/_                splitter.classList.add(&quot;horizontal&quot;);_CR/_                splitter.classList.remove(&quot;vertical&quot;);_CR/_            } else if (layoutMode === 2) {_CR/_                container.style.flexDirection = &quot;row&quot;;_CR/_                editor1.style.width = &quot;50vw&quot;;_CR/_                editor2.style.width = &quot;50vw&quot;;_CR/_                editor1.style.height = &quot;100vh&quot;;_CR/_                editor2.style.height = &quot;100vh&quot;;_CR/_                splitter.classList.add(&quot;vertical&quot;);_CR/_                splitter.classList.remove(&quot;horizontal&quot;);_CR/_            }_CR/_        }_CR/_    }_CR/__CR/_    configureLayout();_CR/__CR/_    console.log(&quot;Initializing CodeMirror Instances&quot;);_CR/__CR/_    var editorInstance1 = CodeMirror(document.getElementById(&quot;editor1&quot;), {_CR/_        mode: &quot;filemaker&quot;,_CR/_        theme: &quot;default&quot;,_CR/_        lineNumbers: true,_CR/_        hintOptions: { hint: CodeMirror.hint.filemaker }_CR/_    });_CR/__CR/_    var editorInstance2 = CodeMirror(document.getElementById(&quot;editor2&quot;), {_CR/_        mode: &quot;filemaker&quot;,_CR/_        theme: &quot;default&quot;,_CR/_        lineNumbers: true,_CR/_        hintOptions: { hint: CodeMirror.hint.filemaker }_CR/_    });_CR/__CR/_    console.log(&quot;CodeMirror Instances Created&quot;);_CR/__CR/_    window.loadCode1 = function(code) {_CR/_        console.log(&quot;loadCode1() called with:&quot;, code);_CR/_        if (!editorInstance1) {_CR/_            console.error(&quot;editorInstance1 is undefined!&quot;);_CR/_            return;_CR/_        }_CR/__CR/_        console.log(&quot;Editor 1 Content BEFORE:&quot;, editorInstance1.getValue());_CR/_        editorInstance1.setValue(code);_CR/_        editorInstance1.refresh(); // Forces UI refresh_CR/_        console.log(&quot;Editor 1 Content AFTER:&quot;, editorInstance1.getValue());_CR/_    };_CR/__CR/_    window.loadCode2 = function(code) {_CR/_        console.log(&quot;loadCode2() called with:&quot;, code);_CR/_        if (!editorInstance2) {_CR/_            console.error(&quot;editorInstance2 is undefined!&quot;);_CR/_            return;_CR/_        }_CR/__CR/_        console.log(&quot;Editor 2 Content BEFORE:&quot;, editorInstance2.getValue());_CR/_        editorInstance2.setValue(code);_CR/_        editorInstance2.refresh(); // Forces UI refresh_CR/_        console.log(&quot;Editor 2 Content AFTER:&quot;, editorInstance2.getValue());_CR/_    };_CR/__CR/_    window.setEditorFont = function(fontFamily, fontSize) {_CR/_        console.log(&quot;setEditorFont called with:&quot;, fontFamily, fontSize);_CR/_        let editorElements = document.querySelectorAll(&quot;.CodeMirror&quot;);_CR/_        editorElements.forEach(el =&gt; {_CR/_            if (fontFamily) el.style.fontFamily = fontFamily;_CR/_            if (fontSize) el.style.fontSize = fontSize + &quot;px&quot;;_CR/_        });_CR/_    };_CR/__CR/_    // Debugging in applySettings_CR/_    window.applySettings = function(payload) {_CR/_    console.log(&quot;applySettings() called&quot;);_CR/_    _CR/_    // If payload is a string, parse it as JSON_CR/_    if (typeof payload === &quot;string&quot;) {_CR/_        console.log(&quot;Received payload as string, parsing JSON...&quot;);_CR/_        try {_CR/_            payload = JSON.parse(payload);_CR/_        } catch (error) {_CR/_            console.error(&quot;Failed to parse payload:&quot;, error);_CR/_            return;_CR/_        }_CR/_    }_CR/__CR/_    console.log(&quot;Full payload received:&quot;, JSON.stringify(payload, null, 2));_CR/__CR/_    if (payload.windowMode !== undefined) {_CR/_            console.log(&quot;Applying windowMode:&quot;, payload.windowMode);_CR/_            setWindowMode(payload.windowMode);_CR/_        } else {_CR/_            console.warn(&quot;No windowMode provided, keeping current setting.&quot;);_CR/_        }_CR/__CR/_        if (payload.code1 !== undefined) {_CR/_            console.log(&quot;Applying code1...&quot;);_CR/_            loadCode1(payload.code1);_CR/_        } else {_CR/_            console.warn(&quot;No code1 provided, keeping current content.&quot;);_CR/_        }_CR/__CR/_        if (payload.code2 !== undefined) {_CR/_            console.log(&quot;Applying code2...&quot;);_CR/_            loadCode2(payload.code2);_CR/_        } else {_CR/_            console.warn(&quot;No code2 provided, keeping current content.&quot;);_CR/_        }_CR/__CR/_        if (payload.fontFamily !== undefined || payload.fontSize !== undefined) {_CR/_            console.log(&quot;Applying font settings:&quot;, payload.fontFamily, payload.fontSize);_CR/_            setEditorFont(payload.fontFamily, payload.fontSize);_CR/_        } else {_CR/_            console.warn(&quot;No font settings provided, keeping current values.&quot;);_CR/_        }_CR/_    };_CR/__CR/_    editorInstance1.on(&quot;change&quot;, function() {_CR/_        let code = editorInstance1.getValue();_CR/_        console.log(&quot;Editor 1 content changed. Saving to FileMaker:&quot;, code);_CR/_        FileMaker.PerformScript(&quot;codeMirrorSaveCode1&quot;, code);_CR/_    });_CR/__CR/_    editorInstance2.on(&quot;change&quot;, function() {_CR/_        let code = editorInstance2.getValue();_CR/_        console.log(&quot;Editor 2 content changed. Saving to FileMaker:&quot;, code);_CR/_        FileMaker.PerformScript(&quot;codeMirrorSaveCode2&quot;, code);_CR/_    });_CR/__CR/_    editorInstance1.on(&quot;inputRead&quot;, function(cm) {_CR/_        if (!cm.state.completionActive) cm.showHint({ hint: CodeMirror.hint.filemaker, completeSingle: false });_CR/_    });_CR/__CR/_    editorInstance2.on(&quot;inputRead&quot;, function(cm) {_CR/_        if (!cm.state.completionActive) cm.showHint({ hint: CodeMirror.hint.filemaker, completeSingle: false });_CR/_    });_CR/__CR/_    // Splitter Dragging Fix_CR/_    let isResizing = false;_CR/__CR/_    document.getElementById(&quot;splitter&quot;).addEventListener(&quot;mousedown&quot;, function(e) {_CR/_        e.preventDefault();_CR/_        isResizing = true;_CR/_        document.addEventListener(&quot;mousemove&quot;, resizeEditor);_CR/_        document.addEventListener(&quot;mouseup&quot;, () =&gt; {_CR/_            isResizing = false;_CR/_            document.removeEventListener(&quot;mousemove&quot;, resizeEditor);_CR/_        });_CR/_    });_CR/__CR/_    function resizeEditor(e) {_CR/_        if (!isResizing) return;_CR/__CR/_        let editor1 = document.getElementById(&quot;editorContainer1&quot;);_CR/_        let editor2 = document.getElementById(&quot;editorContainer2&quot;);_CR/_        let container = document.getElementById(&quot;container&quot;);_CR/__CR/_        if (layoutMode === 1) {_CR/_            let totalHeight = container.clientHeight;_CR/_            let newHeight = Math.max(50, Math.min(totalHeight - 50, e.clientY));_CR/_            editor1.style.height = newHeight + &quot;px&quot;;_CR/_            editor2.style.height = (totalHeight - newHeight - 8) + &quot;px&quot;;_CR/_        } else if (layoutMode === 2) {_CR/_            let totalWidth = container.clientWidth;_CR/_            let newWidth = Math.max(50, Math.min(totalWidth - 50, e.clientX));_CR/_            editor1.style.width = newWidth + &quot;px&quot;;_CR/_            editor2.style.width = (totalWidth - newWidth - 8) + &quot;px&quot;;_CR/_        }_CR/_    }_CR/__CR/_&lt;/script&gt;_CR/__CR/_&lt;/body&gt;_CR/_&lt;/html&gt;</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.F8C692C443F93C94F89751BC18D8150A</StringID>
	<SourceText>Expected Payload Syntax</SourceText>
	<TargetText>Expected Payload Syntax</TargetText>
	<Comment>com.fmi.scriptstep.text.Expected Payload Syntax</Comment>
</DynamicTemplateString>

<DynamicTemplateString>
	<StringID>com.fmi.scriptstep.text.FC088FA99422E23CCBF77AAA79A072B4</StringID>
	<SourceText>Written on 12.02.2025 |  Updated: 00.00.0000  | Valid: Yes</SourceText>
	<TargetText>Written on 12.02.2025 |  Updated: 00.00.0000  | Valid: Yes</TargetText>
	<Comment>com.fmi.scriptstep.text.Written on 12.02.2025 |  Updated: 00.00.0000  | Valid: Yes</Comment>
</DynamicTemplateString>
